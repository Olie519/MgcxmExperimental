<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="_asset_manager_8cs" kind="file" language="C#">
    <compoundname>AssetManager.cs</compoundname>
    <innerclass refid="class_openlabs_1_1_mgcxm_1_1_assets_1_1_asset_manager" prot="public">Openlabs::Mgcxm::Assets::AssetManager</innerclass>
    <innerclass refid="class_openlabs_1_1_mgcxm_1_1_assets_1_1_asset_load_request" prot="public">Openlabs::Mgcxm::Assets::AssetLoadRequest</innerclass>
    <innernamespace refid="namespace_openlabs">Openlabs</innernamespace>
    <innernamespace refid="namespace_openlabs_1_1_mgcxm">Openlabs::Mgcxm</innernamespace>
    <innernamespace refid="namespace_openlabs_1_1_mgcxm_1_1_assets">Openlabs::Mgcxm::Assets</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copr.<sp/>(c)<sp/>Nexus<sp/>2023.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_openlabs_1_1_mgcxm_1_1_internal" kindref="compound">Openlabs.Mgcxm.Internal</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5" refid="namespace_openlabs_1_1_mgcxm_1_1_assets" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_openlabs_1_1_mgcxm_1_1_assets" kindref="compound">Openlabs.Mgcxm.Assets</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AssetManager</highlight></codeline>
<codeline lineno="8"><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LoadAll(<ref refid="class_openlabs_1_1_mgcxm_1_1_assets_1_1_asset_load_request" kindref="compound">AssetLoadRequest</ref>[]<sp/>requests)</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogSink.Info($</highlight><highlight class="stringliteral">&quot;Loading<sp/>{requests.Length}<sp/>asset(s)<sp/>into<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>load<sp/>all<sp/>objects<sp/>into<sp/>memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">foreach</highlight><highlight class="normal"><sp/>(var<sp/>tempRequest<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>requests)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tempRequest.type.InheritsOrImplements(typeof(<ref refid="class_openlabs_1_1_mgcxm_1_1_assets_1_1_object_asset" kindref="compound">ObjectAsset</ref>)))</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>InvalidDataException($</highlight><highlight class="stringliteral">&quot;Cannot<sp/>load<sp/>a<sp/>type<sp/>that<sp/>doesnt<sp/>inherit<sp/>ObjectAsset!<sp/>Type<sp/>=<sp/>{tempRequest.type.Name}&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_allLoadedAssets.Add((<ref refid="class_openlabs_1_1_mgcxm_1_1_assets_1_1_object_asset" kindref="compound">ObjectAsset</ref>)Activator.CreateInstance(tempRequest.type,<sp/>tempRequest.args)!);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogSink.Trace($</highlight><highlight class="stringliteral">&quot;Added<sp/>&apos;{tempRequest.type.Name}&apos;<sp/>to<sp/>memory<sp/>with<sp/>{tempRequest.args.Length}<sp/>argument(s)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(Exception<sp/>ex)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>LogSink.Exception(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>load<sp/>all<sp/>object<sp/>assets&quot;</highlight><highlight class="normal">,<sp/>ex);<sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>async<sp/>Task&lt;T&gt;<sp/>Load&lt;T&gt;(params<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">[]<sp/>arguments)</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>where<sp/>T<sp/>:<sp/><ref refid="class_openlabs_1_1_mgcxm_1_1_assets_1_1_object_asset" kindref="compound">ObjectAsset</ref></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>obj<sp/>=<sp/>(T)(<ref refid="class_openlabs_1_1_mgcxm_1_1_assets_1_1_object_asset" kindref="compound">ObjectAsset</ref>)Activator.CreateInstance(typeof(T))!;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>await<sp/>obj.<ref refid="class_openlabs_1_1_mgcxm_1_1_assets_1_1_object_asset_1abbde774f0607a5f80b85e5fb4b8bc6ee" kindref="member">Load</ref>(arguments);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>_allLoadedAssets.Add(obj);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>obj;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(Exception<sp/>ex)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LogSink.Exception(</highlight><highlight class="stringliteral">&quot;Cannot<sp/>load<sp/>object<sp/>asset&quot;</highlight><highlight class="normal">,<sp/>ex);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>List&lt;ObjectAsset&gt;<sp/>_allLoadedAssets<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>readonly<sp/><ref refid="class_openlabs_1_1_mgcxm_1_1_internal_1_1_logger_sink" kindref="compound">LoggerSink</ref><sp/>LogSink<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;AstMgr&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="class_openlabs_1_1_mgcxm_1_1_assets_1_1_asset_load_request" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_openlabs_1_1_mgcxm_1_1_assets_1_1_asset_load_request" kindref="compound">AssetLoadRequest</ref></highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54" refid="class_openlabs_1_1_mgcxm_1_1_assets_1_1_asset_load_request_1a3ee7abaf20dc644c65833a4f66085e79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>implicit<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="class_openlabs_1_1_mgcxm_1_1_assets_1_1_asset_load_request" kindref="compound">AssetLoadRequest</ref>((Type<sp/>t,<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">[]<sp/>a)<sp/>valueTuple)</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=&gt;<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_openlabs_1_1_mgcxm_1_1_assets_1_1_asset_load_request" kindref="compound">AssetLoadRequest</ref><sp/>{<sp/><ref refid="class_openlabs_1_1_mgcxm_1_1_assets_1_1_asset_load_request_1aa53b0d80ae0b4121e3a133a55746cde3" kindref="member">type</ref><sp/>=<sp/>valueTuple.t,<sp/><ref refid="class_openlabs_1_1_mgcxm_1_1_assets_1_1_asset_load_request_1a180ffe4fb7d9687e5512532f65011f19" kindref="member">args</ref><sp/>=<sp/>valueTuple.a<sp/>};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="57" refid="class_openlabs_1_1_mgcxm_1_1_assets_1_1_asset_load_request_1aa53b0d80ae0b4121e3a133a55746cde3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Type<sp/><ref refid="class_openlabs_1_1_mgcxm_1_1_assets_1_1_asset_load_request_1aa53b0d80ae0b4121e3a133a55746cde3" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="58" refid="class_openlabs_1_1_mgcxm_1_1_assets_1_1_asset_load_request_1a180ffe4fb7d9687e5512532f65011f19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">[]<sp/><ref refid="class_openlabs_1_1_mgcxm_1_1_assets_1_1_asset_load_request_1a180ffe4fb7d9687e5512532f65011f19" kindref="member">args</ref>;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Assets/AssetManager.cs"/>
  </compounddef>
</doxygen>
