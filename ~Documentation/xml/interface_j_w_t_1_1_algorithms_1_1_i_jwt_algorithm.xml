<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="interface_j_w_t_1_1_algorithms_1_1_i_jwt_algorithm" kind="interface" language="C#" prot="public">
    <compoundname>JWT::Algorithms::IJwtAlgorithm</compoundname>
    <derivedcompoundref refid="class_j_w_t_1_1_algorithms_1_1_h_m_a_c_s_h_a_algorithm" prot="public" virt="non-virtual">JWT.Algorithms.HMACSHAAlgorithm</derivedcompoundref>
    <derivedcompoundref refid="interface_j_w_t_1_1_algorithms_1_1_i_asymmetric_algorithm" prot="public" virt="non-virtual">JWT.Algorithms.IAsymmetricAlgorithm</derivedcompoundref>
    <derivedcompoundref refid="class_j_w_t_1_1_algorithms_1_1_none_algorithm" prot="public" virt="non-virtual">JWT.Algorithms.NoneAlgorithm</derivedcompoundref>
      <sectiondef kind="property">
      <memberdef kind="property" id="interface_j_w_t_1_1_algorithms_1_1_i_jwt_algorithm_1a62da69d146007031e3ce9d0e3e9e75d3" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>string</type>
        <definition>string JWT.Algorithms.IJwtAlgorithm.Name</definition>
        <argsstring></argsstring>
        <name>Name</name>
        <qualifiedname>JWT.Algorithms.IJwtAlgorithm.Name</qualifiedname>
        <reimplementedby refid="class_j_w_t_1_1_algorithms_1_1_certificate_algorithm_1a084de64501e51afd80ebc626284e65a6">Name</reimplementedby>
        <reimplementedby refid="class_j_w_t_1_1_algorithms_1_1_h_m_a_c_s_h_a256_algorithm_1adb4bbdb60e9dec4c9a5c0e9234256327">Name</reimplementedby>
        <reimplementedby refid="class_j_w_t_1_1_algorithms_1_1_h_m_a_c_s_h_a384_algorithm_1a4ff66109e3907d97ffba1ea01ff351b2">Name</reimplementedby>
        <reimplementedby refid="class_j_w_t_1_1_algorithms_1_1_h_m_a_c_s_h_a512_algorithm_1ab5a24650e0a8e9f0c0e5e5054621a0aa">Name</reimplementedby>
        <reimplementedby refid="class_j_w_t_1_1_algorithms_1_1_h_m_a_c_s_h_a_algorithm_1aac90fb1cfa98ffbf305ebf71b80f0a3a">Name</reimplementedby>
        <reimplementedby refid="class_j_w_t_1_1_algorithms_1_1_none_algorithm_1aa7d65a06a27213ea317d35a264deb366">Name</reimplementedby>
        <briefdescription>
<para>Gets algorithm name. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/Algorithms/IJwtAlgorithm.cs" line="20" column="16" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/Algorithms/IJwtAlgorithm.cs" bodystart="20" bodyend="20"/>
      </memberdef>
      <memberdef kind="property" id="interface_j_w_t_1_1_algorithms_1_1_i_jwt_algorithm_1a5d291434247bc99339dc5e3b1dd2b934" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>HashAlgorithmName</type>
        <definition>HashAlgorithmName JWT.Algorithms.IJwtAlgorithm.HashAlgorithmName</definition>
        <argsstring></argsstring>
        <name>HashAlgorithmName</name>
        <qualifiedname>JWT.Algorithms.IJwtAlgorithm.HashAlgorithmName</qualifiedname>
        <reimplementedby refid="class_j_w_t_1_1_algorithms_1_1_certificate_algorithm_1a0dc44f24b84578049a79ee3e07cd3972">HashAlgorithmName</reimplementedby>
        <reimplementedby refid="class_j_w_t_1_1_algorithms_1_1_h_m_a_c_s_h_a256_algorithm_1a50c1d4b2bb157a8cea23dce952e18401">HashAlgorithmName</reimplementedby>
        <reimplementedby refid="class_j_w_t_1_1_algorithms_1_1_h_m_a_c_s_h_a384_algorithm_1aad687af5534bb130d31acddebd60da75">HashAlgorithmName</reimplementedby>
        <reimplementedby refid="class_j_w_t_1_1_algorithms_1_1_h_m_a_c_s_h_a512_algorithm_1ab34bd24e4f6427dc73b8e7003a486331">HashAlgorithmName</reimplementedby>
        <reimplementedby refid="class_j_w_t_1_1_algorithms_1_1_h_m_a_c_s_h_a_algorithm_1a1928f028261e861ddfc16c90052dcdec">HashAlgorithmName</reimplementedby>
        <reimplementedby refid="class_j_w_t_1_1_algorithms_1_1_none_algorithm_1aaa387a5acaddafc3325da65dd36dce7a">HashAlgorithmName</reimplementedby>
        <briefdescription>
<para>Gets name of the hashing algorithm (e.g. SHA-256/SHA-384/SHA-512). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/Algorithms/IJwtAlgorithm.cs" line="25" column="27" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/Algorithms/IJwtAlgorithm.cs" bodystart="25" bodyend="25"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="interface_j_w_t_1_1_algorithms_1_1_i_jwt_algorithm_1ad652a42a9eb189006c5a866a556826c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>byte[]</type>
        <definition>byte[] JWT.Algorithms.IJwtAlgorithm.Sign</definition>
        <argsstring>(byte[] key, byte[] bytesToSign)</argsstring>
        <name>Sign</name>
        <qualifiedname>JWT.Algorithms.IJwtAlgorithm.Sign</qualifiedname>
        <reimplementedby refid="class_j_w_t_1_1_algorithms_1_1_certificate_algorithm_1a1a4d69530d9de76267bd7978599ed4b3">Sign</reimplementedby>
        <reimplementedby refid="class_j_w_t_1_1_algorithms_1_1_h_m_a_c_s_h_a_algorithm_1ab50a4c7dddcd0cdb6649532086f1d706">Sign</reimplementedby>
        <reimplementedby refid="class_j_w_t_1_1_algorithms_1_1_none_algorithm_1aec567a5415bef88d75fd9ffa7f85a08b">Sign</reimplementedby>
        <param>
          <type>byte[]</type>
          <declname>key</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>bytesToSign</declname>
        </param>
        <briefdescription>
<para>Signs provided byte array with provided key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key used to sign the data</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytesToSign</parametername>
</parameternamelist>
<parameterdescription>
<para>The data to sign</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/Algorithms/IJwtAlgorithm.cs" line="15" column="14"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents an algorithm to generate <ref refid="namespace_j_w_t" kindref="compound">JWT</ref> signature. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>JWT.Algorithms.IJwtAlgorithm</label>
        <link refid="interface_j_w_t_1_1_algorithms_1_1_i_jwt_algorithm"/>
      </node>
      <node id="7">
        <label>JWT.Algorithms.CertificateAlgorithm&lt; T &gt;</label>
        <link refid="class_j_w_t_1_1_algorithms_1_1_certificate_algorithm"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>JWT.Algorithms.HMACSHA256Algorithm</label>
        <link refid="class_j_w_t_1_1_algorithms_1_1_h_m_a_c_s_h_a256_algorithm"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>JWT.Algorithms.HMACSHA384Algorithm</label>
        <link refid="class_j_w_t_1_1_algorithms_1_1_h_m_a_c_s_h_a384_algorithm"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>JWT.Algorithms.HMACSHA512Algorithm</label>
        <link refid="class_j_w_t_1_1_algorithms_1_1_h_m_a_c_s_h_a512_algorithm"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>JWT.Algorithms.HMACSHAAlgorithm</label>
        <link refid="class_j_w_t_1_1_algorithms_1_1_h_m_a_c_s_h_a_algorithm"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>JWT.Algorithms.IAsymmetricAlgorithm</label>
        <link refid="interface_j_w_t_1_1_algorithms_1_1_i_asymmetric_algorithm"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>JWT.Algorithms.NoneAlgorithm</label>
        <link refid="class_j_w_t_1_1_algorithms_1_1_none_algorithm"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/Algorithms/IJwtAlgorithm.cs" line="8" column="22" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/Algorithms/IJwtAlgorithm.cs" bodystart="9" bodyend="26"/>
    <listofallmembers>
      <member refid="interface_j_w_t_1_1_algorithms_1_1_i_jwt_algorithm_1a5d291434247bc99339dc5e3b1dd2b934" prot="public" virt="non-virtual"><scope>JWT::Algorithms::IJwtAlgorithm</scope><name>HashAlgorithmName</name></member>
      <member refid="interface_j_w_t_1_1_algorithms_1_1_i_jwt_algorithm_1a62da69d146007031e3ce9d0e3e9e75d3" prot="public" virt="non-virtual"><scope>JWT::Algorithms::IJwtAlgorithm</scope><name>Name</name></member>
      <member refid="interface_j_w_t_1_1_algorithms_1_1_i_jwt_algorithm_1ad652a42a9eb189006c5a866a556826c0" prot="public" virt="non-virtual"><scope>JWT::Algorithms::IJwtAlgorithm</scope><name>Sign</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
