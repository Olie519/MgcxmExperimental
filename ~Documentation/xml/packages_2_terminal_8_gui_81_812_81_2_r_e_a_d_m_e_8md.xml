<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="packages_2_terminal_8_gui_81_812_81_2_r_e_a_d_m_e_8md" kind="file" language="Markdown">
    <compoundname>README.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">![Terminal.Gui](https://socialify.git.ci/gui-cs/Terminal.Gui/image?description=1&amp;font=Rokkitt&amp;forks=1&amp;language=1&amp;logo=https%3A%2F%2Fraw.githubusercontent.com%2Fgui-cs%2FTerminal.Gui%2Fdevelop%2Fdocfx%2Fimages%2Flogo.png&amp;name=1&amp;owner=1&amp;pattern=Circuit%20Board&amp;stargazers=1&amp;theme=Auto)</highlight></codeline>
<codeline><highlight class="normal">![.NET<sp/>Core](https://github.com/gui-cs/Terminal.Gui/workflows/.NET%20Core/badge.svg?branch=master)</highlight></codeline>
<codeline><highlight class="normal">![Code<sp/>scanning<sp/>-<sp/>action](https://github.com/gui-cs/Terminal.Gui/workflows/Code%20scanning%20-%20action/badge.svg)</highlight></codeline>
<codeline><highlight class="normal">[![Version](https://img.shields.io/nuget/v/Terminal.Gui.svg)](https://www.nuget.org/packages/Terminal.Gui)</highlight></codeline>
<codeline><highlight class="normal">![Code<sp/>Coverage](https://img.shields.io/endpoint?url=https://gist.githubusercontent.com/migueldeicaza/90ef67a684cb71db1817921a970f8d27/raw/code-coverage.json)</highlight></codeline>
<codeline><highlight class="normal">[![Downloads](https://img.shields.io/nuget/dt/Terminal.Gui)](https://www.nuget.org/packages/Terminal.Gui)</highlight></codeline>
<codeline><highlight class="normal">[![License](https://img.shields.io/github/license/gui-cs/gui.cs.svg)](LICENSE)</highlight></codeline>
<codeline><highlight class="normal">![Bugs](https://img.shields.io/github/issues/gui-cs/gui.cs/bug)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">***The<sp/>current,<sp/>stable,<sp/>release<sp/>of<sp/>Terminal.Gui<sp/>is<sp/>[v1.x](https://www.nuget.org/packages/Terminal.Gui).<sp/>It<sp/>is<sp/>stable,<sp/>rich,<sp/>and<sp/>broadly<sp/>used.<sp/>The<sp/>team<sp/>is<sp/>now<sp/>focused<sp/>on<sp/>designing<sp/>and<sp/>building<sp/>a<sp/>significant<sp/>upgrade<sp/>we&apos;re<sp/>referring<sp/>to<sp/>as<sp/>`v2`.<sp/>Therefore:***</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>*`v1`<sp/>is<sp/>now<sp/>in<sp/>maintenance<sp/>mode,<sp/>meaning<sp/>we<sp/>will<sp/>accept<sp/>PRs<sp/>for<sp/>v1.x<sp/>(the<sp/>`develop`<sp/>branch)<sp/>only<sp/>for<sp/>issues<sp/>impacting<sp/>existing<sp/>functionality.*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>*All<sp/>new<sp/>development<sp/>happens<sp/>on<sp/>the<sp/>`v2_develop`<sp/>branch.<sp/>See<sp/>the<sp/>V2<sp/>discussion<sp/>[here](https://github.com/gui-cs/Terminal.Gui/discussions/1940).*</highlight></codeline>
<codeline><highlight class="normal"><sp/>*<sp/>*Developers<sp/>are<sp/>encouraged<sp/>to<sp/>continue<sp/>building<sp/>on<sp/>[v1.x](https://www.nuget.org/packages/Terminal.Gui)<sp/>until<sp/>we<sp/>announce<sp/>`v2`<sp/>is<sp/>stable.*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**Terminal.Gui**:<sp/>A<sp/>toolkit<sp/>for<sp/>building<sp/>rich<sp/>console<sp/>apps<sp/>for<sp/>.NET,<sp/>.NET<sp/>Core,<sp/>and<sp/>Mono<sp/>that<sp/>works<sp/>on<sp/>Windows,<sp/>the<sp/>Mac,<sp/>and<sp/>Linux/Unix.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Sample<sp/>app](docfx/images/sample.gif)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Quick<sp/>Start</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Paste<sp/>these<sp/>commands<sp/>into<sp/>your<sp/>favorite<sp/>terminal<sp/>on<sp/>Windows,<sp/>Mac,<sp/>or<sp/>Linux.<sp/>This<sp/>will<sp/>install<sp/>the<sp/>[Terminal.Gui.Templates](https://github.com/gui-cs/Terminal.Gui.templates),<sp/>create<sp/>a<sp/>new<sp/>&quot;Hello<sp/>World&quot;<sp/>TUI<sp/>app,<sp/>and<sp/>run<sp/>it.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">(Press<sp/>`CTRL-Q`<sp/>to<sp/>exit<sp/>the<sp/>app)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```powershell</highlight></codeline>
<codeline><highlight class="normal">dotnet<sp/>new<sp/>--install<sp/>Terminal.Gui.templates</highlight></codeline>
<codeline><highlight class="normal">dotnet<sp/>new<sp/>tui<sp/>-n<sp/>myproj</highlight></codeline>
<codeline><highlight class="normal">cd<sp/>myproj</highlight></codeline>
<codeline><highlight class="normal">dotnet<sp/>run</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Documentation<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>[Documentation<sp/>Home](https://gui-cs.github.io/Terminal.Gui/index.html)</highlight></codeline>
<codeline><highlight class="normal">*<sp/>[Terminal.Gui<sp/>Overview](https://gui-cs.github.io/Terminal.Gui/articles/overview.html)</highlight></codeline>
<codeline><highlight class="normal">*<sp/>[List<sp/>of<sp/>Views/Controls](https://gui-cs.github.io/Terminal.Gui/articles/views.html)</highlight></codeline>
<codeline><highlight class="normal">*<sp/>[Conceptual<sp/>Documentation](https://gui-cs.github.io/Terminal.Gui/articles/index.html)</highlight></codeline>
<codeline><highlight class="normal">*<sp/>[API<sp/>Documentation](https://gui-cs.github.io/Terminal.Gui/api/Terminal.Gui/Terminal.Gui.html)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">_The<sp/>Documentation<sp/>matches<sp/>the<sp/>most<sp/>recent<sp/>Nuget<sp/>release<sp/>from<sp/>the<sp/>`main`<sp/>branch<sp/>([![Version](https://img.shields.io/nuget/v/Terminal.Gui.svg)](https://www.nuget.org/packages/Terminal.Gui))_</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Features</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>**Cross<sp/>Platform**<sp/>-<sp/>Windows,<sp/>Mac,<sp/>and<sp/>Linux.<sp/>Terminal<sp/>drivers<sp/>for<sp/>Curses,<sp/>[Windows<sp/>Console](https://github.com/gui-cs/Terminal.Gui/issues/27),<sp/>and<sp/>the<sp/>.NET<sp/>Console<sp/>mean<sp/>apps<sp/>will<sp/>work<sp/>well<sp/>on<sp/>both<sp/>color<sp/>and<sp/>monochrome<sp/>terminals.<sp/></highlight></codeline>
<codeline><highlight class="normal">*<sp/>**Keyboard<sp/>and<sp/>Mouse<sp/>Input**<sp/>-<sp/>Both<sp/>keyboard<sp/>and<sp/>mouse<sp/>input<sp/>are<sp/>supported,<sp/>including<sp/>support<sp/>for<sp/>drag<sp/>&amp;<sp/>drop.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>**[Flexible<sp/>Layout](https://gui-cs.github.io/Terminal.Gui/articles/overview.html#layout)**<sp/>-<sp/>Supports<sp/>both<sp/>*Absolute<sp/>layout*<sp/>and<sp/>an<sp/>innovative<sp/>*Computed<sp/>Layout*<sp/>system.<sp/>*Computed<sp/>Layout*<sp/>makes<sp/>it<sp/>easy<sp/>to<sp/>layout<sp/>controls<sp/>relative<sp/>to<sp/>each<sp/>other<sp/>and<sp/>enables<sp/>dynamic<sp/>terminal<sp/>UIs.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>**Clipboard<sp/>support**<sp/>-<sp/>Cut,<sp/>Copy,<sp/>and<sp/>Paste<sp/>of<sp/>text<sp/>provided<sp/>through<sp/>the<sp/>[`Clipboard`](https://gui-cs.github.io/Terminal.Gui/api/Terminal.Gui/Terminal.Gui.Clipboard.html)<sp/>class.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>**[Arbitrary<sp/>Views](https://gui-cs.github.io/Terminal.Gui/api/Terminal.Gui/Terminal.Gui.View.html)**<sp/>-<sp/>All<sp/>visible<sp/>UI<sp/>elements<sp/>are<sp/>subclasses<sp/>of<sp/>the<sp/>`View`<sp/>class,<sp/>and<sp/>these<sp/>in<sp/>turn<sp/>can<sp/>contain<sp/>an<sp/>arbitrary<sp/>number<sp/>of<sp/>sub-views.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>**Advanced<sp/>App<sp/>Features**<sp/>-<sp/>The<sp/>[Mainloop](https://gui-cs.github.io/Terminal.Gui/api/Terminal.Gui/Terminal.Gui.MainLoop.html)<sp/>supports<sp/>processing<sp/>events,<sp/>idle<sp/>handlers,<sp/>timers,<sp/>and<sp/>monitoring<sp/>file</highlight></codeline>
<codeline><highlight class="normal">descriptors.<sp/>Most<sp/>classes<sp/>are<sp/>safe<sp/>for<sp/>threading.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>**Reactive<sp/>Extensions**<sp/>-<sp/>Use<sp/>[reactive<sp/>extensions](https://github.com/dotnet/reactive)<sp/>and<sp/>benefit<sp/>from<sp/>increased<sp/>code<sp/>readability,<sp/>and<sp/>the<sp/>ability<sp/>to<sp/>apply<sp/>the<sp/>MVVM<sp/>pattern<sp/>and<sp/>[ReactiveUI](https://www.reactiveui.net/)<sp/>data<sp/>bindings.<sp/>See<sp/>the<sp/>[source<sp/>code](https://github.com/gui-cs/Terminal.Gui/tree/master/ReactiveExample)<sp/>of<sp/>a<sp/>sample<sp/>app<sp/>in<sp/>order<sp/>to<sp/>learn<sp/>how<sp/>to<sp/>achieve<sp/>this.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Showcase<sp/>&amp;<sp/>Examples</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>**[UI<sp/>Catalog](https://github.com/gui-cs/Terminal.Gui/tree/master/UICatalog)**<sp/>-<sp/>The<sp/>UI<sp/>Catalog<sp/>project<sp/>provides<sp/>an<sp/>easy<sp/>to<sp/>use<sp/>and<sp/>extend<sp/>sample<sp/>illustrating<sp/>the<sp/>capabilities<sp/>of<sp/>**Terminal.Gui**.<sp/>Run<sp/>`dotnet<sp/>run<sp/>--project<sp/>UICatalog`<sp/>to<sp/>run<sp/>the<sp/>UI<sp/>Catalog.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>**[C#<sp/>Example](https://github.com/gui-cs/Terminal.Gui/tree/master/Example)**<sp/>-<sp/>Run<sp/>`dotnet<sp/>run`<sp/>in<sp/>the<sp/>`Example`<sp/>directory<sp/>to<sp/>run<sp/>the<sp/>C#<sp/>Example.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>**[F#<sp/>Example](https://github.com/gui-cs/Terminal.Gui/tree/master/FSharpExample)**<sp/>-<sp/>An<sp/>example<sp/>showing<sp/>how<sp/>to<sp/>build<sp/>a<sp/>Terminal.Gui<sp/>app<sp/>using<sp/>F#.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>**[Reactive<sp/>Example](https://github.com/gui-cs/Terminal.Gui/tree/master/ReactiveExample)**<sp/>-<sp/>A<sp/>sample<sp/>app<sp/>that<sp/>shows<sp/>how<sp/>to<sp/>use<sp/>`System.Reactive`<sp/>and<sp/>`ReactiveUI`<sp/>with<sp/>`Terminal.Gui`.<sp/>The<sp/>app<sp/>uses<sp/>the<sp/>MVVM<sp/>architecture<sp/>that<sp/>may<sp/>seem<sp/>familiar<sp/>to<sp/>folks<sp/>coming<sp/>from<sp/>WPF,<sp/>Xamarin<sp/>Forms,<sp/>UWP,<sp/>Avalonia,<sp/>or<sp/>Windows<sp/>Forms.<sp/>In<sp/>this<sp/>app,<sp/>we<sp/>implement<sp/>the<sp/>data<sp/>bindings<sp/>using<sp/>ReactiveUI<sp/>`WhenAnyValue`<sp/>syntax<sp/>and<sp/>[Pharmacist](https://github.com/reactiveui/pharmacist)<sp/>—<sp/>a<sp/>tool<sp/>that<sp/>converts<sp/>all<sp/>events<sp/>in<sp/>a<sp/>NuGet<sp/>package<sp/>into<sp/>observable<sp/>wrappers.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>**[PowerShell&apos;s<sp/>`Out-ConsoleGridView`](https://github.com/PowerShell/GraphicalTools)**<sp/>-<sp/>`OCGV`<sp/>sends<sp/>the<sp/>output<sp/>from<sp/>a<sp/>command<sp/>to<sp/><sp/>an<sp/>interactive<sp/>table.<sp/></highlight></codeline>
<codeline><highlight class="normal">*<sp/>**[PoshRedisViewer](https://github.com/En3Tho/PoshRedisViewer)**<sp/>-<sp/>A<sp/>compact<sp/>Redis<sp/>viewer<sp/>module<sp/>for<sp/>PowerShell<sp/>written<sp/>in<sp/>F#<sp/>and<sp/>Gui.cs</highlight></codeline>
<codeline><highlight class="normal">*<sp/>**[TerminalGuiDesigner](https://github.com/tznind/TerminalGuiDesigner)**<sp/>-<sp/>Cross<sp/>platform<sp/>view<sp/>designer<sp/>for<sp/>building<sp/>Terminal.Gui<sp/>applications.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">See<sp/>the<sp/>[`Terminal.Gui/`<sp/>README](https://github.com/gui-cs/Terminal.Gui/tree/master/Terminal.Gui)<sp/>for<sp/>an<sp/>overview<sp/>of<sp/>how<sp/>the<sp/>library<sp/>is<sp/>structured.<sp/>The<sp/>[Conceptual<sp/>Documentation](https://gui-cs.github.io/Terminal.Gui/articles/index.html)<sp/>provides<sp/>insight<sp/>into<sp/>core<sp/>concepts.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Sample<sp/>Usage<sp/>in<sp/>C#</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>following<sp/>example<sp/>shows<sp/>a<sp/>basic<sp/>Terminal.Gui<sp/>application<sp/>written<sp/>in<sp/>C#:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```csharp</highlight></codeline>
<codeline><highlight class="normal">//<sp/>A<sp/>simple<sp/>Terminal.Gui<sp/>example<sp/>in<sp/>C#<sp/>-<sp/>using<sp/>C#<sp/>9.0<sp/>Top-level<sp/>statements</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">using<sp/>Terminal.Gui;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Application.Run&lt;ExampleWindow&gt;<sp/>();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">System.Console.WriteLine<sp/>($&quot;Username:<sp/>{((ExampleWindow)Application.Top).usernameText.Text}&quot;);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Before<sp/>the<sp/>application<sp/>exits,<sp/>reset<sp/>Terminal.Gui<sp/>for<sp/>clean<sp/>shutdown</highlight></codeline>
<codeline><highlight class="normal">Application.Shutdown<sp/>();</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">//<sp/>Defines<sp/>a<sp/>top-level<sp/>window<sp/>with<sp/>border<sp/>and<sp/>title</highlight></codeline>
<codeline><highlight class="normal">public<sp/>class<sp/>ExampleWindow<sp/>:<sp/>Window<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>public<sp/>TextField<sp/>usernameText;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>public<sp/>ExampleWindow<sp/>()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Title<sp/>=<sp/>&quot;Example<sp/>App<sp/>(Ctrl+Q<sp/>to<sp/>quit)&quot;;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Create<sp/>input<sp/>components<sp/>and<sp/>labels</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>usernameLabel<sp/>=<sp/>new<sp/>Label<sp/>()<sp/>{<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Text<sp/>=<sp/>&quot;Username:&quot;<sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usernameText<sp/>=<sp/>new<sp/>TextField<sp/>(&quot;&quot;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Position<sp/>text<sp/>field<sp/>adjacent<sp/>to<sp/>the<sp/>label</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X<sp/>=<sp/>Pos.Right<sp/>(usernameLabel)<sp/>+<sp/>1,</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Fill<sp/>remaining<sp/>horizontal<sp/>space</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Width<sp/>=<sp/>Dim.Fill<sp/>(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>passwordLabel<sp/>=<sp/>new<sp/>Label<sp/>()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Text<sp/>=<sp/>&quot;Password:&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X<sp/>=<sp/>Pos.Left<sp/>(usernameLabel),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Y<sp/>=<sp/>Pos.Bottom<sp/>(usernameLabel)<sp/>+<sp/>1</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>passwordText<sp/>=<sp/>new<sp/>TextField<sp/>(&quot;&quot;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Secret<sp/>=<sp/>true,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>align<sp/>with<sp/>the<sp/>text<sp/>box<sp/>above</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X<sp/>=<sp/>Pos.Left<sp/>(usernameText),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Y<sp/>=<sp/>Pos.Top<sp/>(passwordLabel),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Width<sp/>=<sp/>Dim.Fill<sp/>(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Create<sp/>login<sp/>button</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>btnLogin<sp/>=<sp/>new<sp/>Button<sp/>()<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Text<sp/>=<sp/>&quot;Login&quot;,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Y<sp/>=<sp/>Pos.Bottom(passwordLabel)<sp/>+<sp/>1,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>center<sp/>the<sp/>login<sp/>button<sp/>horizontally</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>X<sp/>=<sp/>Pos.Center<sp/>(),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IsDefault<sp/>=<sp/>true,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>When<sp/>login<sp/>button<sp/>is<sp/>clicked<sp/>display<sp/>a<sp/>message<sp/>popup</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>btnLogin.Clicked<sp/>+=<sp/>()<sp/>=&gt;<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(usernameText.Text<sp/>==<sp/>&quot;admin&quot;<sp/>&amp;&amp;<sp/>passwordText.Text<sp/>==<sp/>&quot;password&quot;)<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MessageBox.Query<sp/>(&quot;Logging<sp/>In&quot;,<sp/>&quot;Login<sp/>Successful&quot;,<sp/>&quot;Ok&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Application.RequestStop<sp/>();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MessageBox.ErrorQuery<sp/>(&quot;Logging<sp/>In&quot;,<sp/>&quot;Incorrect<sp/>username<sp/>or<sp/>password&quot;,<sp/>&quot;Ok&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Add<sp/>the<sp/>views<sp/>to<sp/>the<sp/>Window</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Add<sp/>(usernameLabel,<sp/>usernameText,<sp/>passwordLabel,<sp/>passwordText,<sp/>btnLogin);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">When<sp/>run<sp/>the<sp/>application<sp/>looks<sp/>as<sp/>follows:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Simple<sp/>Usage<sp/>app](./docfx/images/Example.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">_Sample<sp/>application<sp/>running_</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Installing</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Use<sp/>NuGet<sp/>to<sp/>install<sp/>the<sp/>`Terminal.Gui`<sp/>NuGet<sp/>package:<sp/>https://www.nuget.org/packages/Terminal.Gui</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Installation<sp/>in<sp/>.NET<sp/>Core<sp/>Projects</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>install<sp/>Terminal.Gui<sp/>into<sp/>a<sp/>.NET<sp/>Core<sp/>project,<sp/>use<sp/>the<sp/>`dotnet`<sp/>CLI<sp/>tool<sp/>with<sp/>following<sp/>command.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline><highlight class="normal">dotnet<sp/>add<sp/>package<sp/>Terminal.Gui</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Or,<sp/>you<sp/>can<sp/>use<sp/>the<sp/>[Terminal.Gui.Templates](https://github.com/gui-cs/Terminal.Gui.templates).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Building<sp/>the<sp/>Library<sp/>and<sp/>Running<sp/>the<sp/>Examples</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*<sp/>Windows,<sp/>Mac,<sp/>and<sp/>Linux<sp/>-<sp/>Build<sp/>and<sp/>run<sp/>using<sp/>the<sp/>.NET<sp/>SDK<sp/>command<sp/>line<sp/>tools<sp/>(`dotnet<sp/>build`<sp/>in<sp/>the<sp/>root<sp/>directory).<sp/>Run<sp/>`UICatalog`<sp/>with<sp/>`dotnet<sp/>run<sp/>--project<sp/>UICatalog`.</highlight></codeline>
<codeline><highlight class="normal">*<sp/>Windows<sp/>-<sp/>Open<sp/>`Terminal.sln`<sp/>with<sp/>Visual<sp/>Studio<sp/>2022.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">See<sp/>[CONTRIBUTING.md](CONTRIBUTING.md)<sp/>for<sp/>instructions<sp/>for<sp/>downloading<sp/>and<sp/>forking<sp/>the<sp/>source.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Contributing</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">See<sp/>[CONTRIBUTING.md](https://github.com/gui-cs/Terminal.Gui/blob/master/CONTRIBUTING.md).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Debates<sp/>on<sp/>architecture<sp/>and<sp/>design<sp/>can<sp/>be<sp/>found<sp/>in<sp/>Issues<sp/>tagged<sp/>with<sp/>[design](https://github.com/gui-cs/Terminal.Gui/issues?q=is%3Aopen+is%3Aissue+label%3Adesign).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>History</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">See<sp/>[gui-cs](https://github.com/gui-cs/)<sp/>for<sp/>how<sp/>this<sp/>project<sp/>came<sp/>to<sp/>be.</highlight></codeline>
    </programlisting>
    <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/packages/Terminal.Gui.1.12.1/README.md"/>
  </compounddef>
</doxygen>
