<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="class_j_w_t_1_1_jwt_validator" kind="class" language="C#" prot="public">
    <compoundname>JWT::JwtValidator</compoundname>
    <basecompoundref refid="interface_j_w_t_1_1_i_jwt_validator" prot="public" virt="non-virtual">JWT.IJwtValidator</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_j_w_t_1_1_jwt_validator_1a19debfb3f1cb211eebd8fcf5221f9162" prot="private" static="no" mutable="no">
        <type>readonly <ref refid="interface_j_w_t_1_1_i_json_serializer" kindref="compound">IJsonSerializer</ref></type>
        <definition>readonly IJsonSerializer JWT.JwtValidator._jsonSerializer</definition>
        <argsstring></argsstring>
        <name>_jsonSerializer</name>
        <qualifiedname>JWT.JwtValidator._jsonSerializer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="27" column="42" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_j_w_t_1_1_jwt_validator_1ab44af40bd95692d85ff8894e3d755d22" prot="private" static="no" mutable="no">
        <type>readonly <ref refid="interface_j_w_t_1_1_i_date_time_provider" kindref="compound">IDateTimeProvider</ref></type>
        <definition>readonly IDateTimeProvider JWT.JwtValidator._dateTimeProvider</definition>
        <argsstring></argsstring>
        <name>_dateTimeProvider</name>
        <qualifiedname>JWT.JwtValidator._dateTimeProvider</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="28" column="44" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_j_w_t_1_1_jwt_validator_1afd49163920f08416822341d324b90262" prot="private" static="no" mutable="no">
        <type>readonly <ref refid="interface_j_w_t_1_1_i_base64_url_encoder" kindref="compound">IBase64UrlEncoder</ref></type>
        <definition>readonly IBase64UrlEncoder JWT.JwtValidator._urlEncoder</definition>
        <argsstring></argsstring>
        <name>_urlEncoder</name>
        <qualifiedname>JWT.JwtValidator._urlEncoder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="29" column="44" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_j_w_t_1_1_jwt_validator_1a41b32ce8eab76004c81a89779a32d9c5" prot="private" static="no" mutable="no">
        <type>readonly <ref refid="class_j_w_t_1_1_validation_parameters" kindref="compound">ValidationParameters</ref></type>
        <definition>readonly ValidationParameters JWT.JwtValidator._valParams</definition>
        <argsstring></argsstring>
        <name>_valParams</name>
        <qualifiedname>JWT.JwtValidator._valParams</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="30" column="47" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_validator_1a0b251406739a3f8f0b5bfb7311be3bf7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>JWT.JwtValidator.JwtValidator</definition>
        <argsstring>(IJsonSerializer jsonSerializer, IDateTimeProvider dateTimeProvider)</argsstring>
        <name>JwtValidator</name>
        <qualifiedname>JWT.JwtValidator.JwtValidator</qualifiedname>
        <param>
          <type><ref refid="interface_j_w_t_1_1_i_json_serializer" kindref="compound">IJsonSerializer</ref></type>
          <declname>jsonSerializer</declname>
        </param>
        <param>
          <type><ref refid="interface_j_w_t_1_1_i_date_time_provider" kindref="compound">IDateTimeProvider</ref></type>
          <declname>dateTimeProvider</declname>
        </param>
        <briefdescription>
<para>Creates an instance of JwtValidator </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jsonSerializer</parametername>
</parameternamelist>
<parameterdescription>
<para>The JSON serializer</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dateTimeProvider</parametername>
</parameternamelist>
<parameterdescription>
<para>The DateTime provider</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="37" column="16" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_validator_1a7c6951bf8bea525d0ce7360dfdfa3861" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>JWT.JwtValidator.JwtValidator</definition>
        <argsstring>(IJsonSerializer jsonSerializer, IDateTimeProvider dateTimeProvider, ValidationParameters valParams)</argsstring>
        <name>JwtValidator</name>
        <qualifiedname>JWT.JwtValidator.JwtValidator</qualifiedname>
        <param>
          <type><ref refid="interface_j_w_t_1_1_i_json_serializer" kindref="compound">IJsonSerializer</ref></type>
          <declname>jsonSerializer</declname>
        </param>
        <param>
          <type><ref refid="interface_j_w_t_1_1_i_date_time_provider" kindref="compound">IDateTimeProvider</ref></type>
          <declname>dateTimeProvider</declname>
        </param>
        <param>
          <type><ref refid="class_j_w_t_1_1_validation_parameters" kindref="compound">ValidationParameters</ref></type>
          <declname>valParams</declname>
        </param>
        <briefdescription>
<para>Creates an instance of JwtValidator with time margin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jsonSerializer</parametername>
</parameternamelist>
<parameterdescription>
<para>The JSON serializer</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dateTimeProvider</parametername>
</parameternamelist>
<parameterdescription>
<para>The DateTime provider</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valParams</parametername>
</parameternamelist>
<parameterdescription>
<para>Validation parameters that are passed on to JwtValidator</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="48" column="16" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="48" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_validator_1a6b2c67683dfd55b5ff182814eca91560" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>JWT.JwtValidator.JwtValidator</definition>
        <argsstring>(IJsonSerializer jsonSerializer, IDateTimeProvider dateTimeProvider, ValidationParameters valParams, IBase64UrlEncoder urlEncoder)</argsstring>
        <name>JwtValidator</name>
        <qualifiedname>JWT.JwtValidator.JwtValidator</qualifiedname>
        <param>
          <type><ref refid="interface_j_w_t_1_1_i_json_serializer" kindref="compound">IJsonSerializer</ref></type>
          <declname>jsonSerializer</declname>
        </param>
        <param>
          <type><ref refid="interface_j_w_t_1_1_i_date_time_provider" kindref="compound">IDateTimeProvider</ref></type>
          <declname>dateTimeProvider</declname>
        </param>
        <param>
          <type><ref refid="class_j_w_t_1_1_validation_parameters" kindref="compound">ValidationParameters</ref></type>
          <declname>valParams</declname>
        </param>
        <param>
          <type><ref refid="interface_j_w_t_1_1_i_base64_url_encoder" kindref="compound">IBase64UrlEncoder</ref></type>
          <declname>urlEncoder</declname>
        </param>
        <briefdescription>
<para>Creates an instance of JwtValidator with time margin. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jsonSerializer</parametername>
</parameternamelist>
<parameterdescription>
<para>The JSON serializer</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dateTimeProvider</parametername>
</parameternamelist>
<parameterdescription>
<para>The DateTime provider</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>valParams</parametername>
</parameternamelist>
<parameterdescription>
<para>Validation parameters that are passed on to JwtValidator</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>urlEncoder</parametername>
</parameternamelist>
<parameterdescription>
<para>The base64 URL Encoder</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="60" column="16" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="60" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_validator_1a40a34370eba0e6d1e71d9c585006e0c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void JWT.JwtValidator.Validate</definition>
        <argsstring>(string decodedPayload, string signature, params string[] decodedSignatures)</argsstring>
        <name>Validate</name>
        <qualifiedname>JWT.JwtValidator.Validate</qualifiedname>
        <reimplements refid="interface_j_w_t_1_1_i_jwt_validator_1ac2a038110fce4e9543386421dc866497">Validate</reimplements>
        <param>
          <type>string</type>
          <declname>decodedPayload</declname>
        </param>
        <param>
          <type>string</type>
          <declname>signature</declname>
        </param>
        <param>
          <type>params string[]</type>
          <declname>decodedSignatures</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><para>Given the <ref refid="namespace_j_w_t" kindref="compound">JWT</ref>, verifies its signature correctness.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>decodedPayload</parametername>
</parameternamelist>
<parameterdescription>
<para>&gt;An arbitrary payload (already serialized to JSON)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>signature</parametername>
</parameternamelist>
<parameterdescription>
<para>Decoded body</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>decodedSignatures</parametername>
</parameternamelist>
<parameterdescription>
<para>The signatures to validate with</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
 <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>SignatureVerificationException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="73" column="21" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="73" bodyend="78"/>
        <references refid="class_j_w_t_1_1_jwt_validator_1aff404e7ee56295dffae8e61130efe70d" compoundref="_jwt_validator_8cs" startline="114" endline="121">JWT.JwtValidator.GetValidationException</references>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_validator_1af52b2455c4d608013cd077fc41dd3421" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void JWT.JwtValidator.Validate</definition>
        <argsstring>(string decodedPayload, IAsymmetricAlgorithm alg, byte[] bytesToSign, byte[] decodedSignature)</argsstring>
        <name>Validate</name>
        <qualifiedname>JWT.JwtValidator.Validate</qualifiedname>
        <reimplements refid="interface_j_w_t_1_1_i_jwt_validator_1a3338c5c0f418836f9eaf1a84482ce5b9">Validate</reimplements>
        <param>
          <type>string</type>
          <declname>decodedPayload</declname>
        </param>
        <param>
          <type><ref refid="interface_j_w_t_1_1_algorithms_1_1_i_asymmetric_algorithm" kindref="compound">IAsymmetricAlgorithm</ref></type>
          <declname>alg</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>bytesToSign</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>decodedSignature</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><para>Given the <ref refid="namespace_j_w_t" kindref="compound">JWT</ref>, verifies its signature correctness.</para>
<para>Used by the asymmetric algorithms only. </para>
 <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>SignatureVerificationException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="83" column="21" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="83" bodyend="88"/>
        <references refid="class_j_w_t_1_1_jwt_validator_1aff404e7ee56295dffae8e61130efe70d" compoundref="_jwt_validator_8cs" startline="114" endline="121">JWT.JwtValidator.GetValidationException</references>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_validator_1a729b5ad4f3b551b967bf6f0b1d558b56" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool JWT.JwtValidator.TryValidate</definition>
        <argsstring>(string payloadJson, string signature, string decodedSignature, out Exception ex)</argsstring>
        <name>TryValidate</name>
        <qualifiedname>JWT.JwtValidator.TryValidate</qualifiedname>
        <reimplements refid="interface_j_w_t_1_1_i_jwt_validator_1a00359e1aaa882dce7d2bc71794e3df6a">TryValidate</reimplements>
        <param>
          <type>string</type>
          <declname>payloadJson</declname>
        </param>
        <param>
          <type>string</type>
          <declname>signature</declname>
        </param>
        <param>
          <type>string</type>
          <declname>decodedSignature</declname>
        </param>
        <param>
          <type>out Exception</type>
          <declname>ex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><para>Given the <ref refid="namespace_j_w_t" kindref="compound">JWT</ref>, verifies its signature correctness without throwing an exception but returning it instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>payloadJson</parametername>
</parameternamelist>
<parameterdescription>
<para>&gt;An arbitrary payload (already serialized to JSON)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>signature</parametername>
</parameternamelist>
<parameterdescription>
<para>Decoded body</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>decodedSignature</parametername>
</parameternamelist>
<parameterdescription>
<para>The signature to validate with</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ex</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting validation exception, if any</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns <computeroutput>true</computeroutput> if exception is <ref refid="namespace_j_w_t" kindref="compound">JWT</ref> is valid and exception is null, otherwise false</para>
</simplesect>
</para>
 <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="92" column="21" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="92" bodyend="96"/>
        <references refid="class_j_w_t_1_1_jwt_validator_1aff404e7ee56295dffae8e61130efe70d" compoundref="_jwt_validator_8cs" startline="114" endline="121">JWT.JwtValidator.GetValidationException</references>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_validator_1a4b76397cce0223e28bc1797b2827e7f4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool JWT.JwtValidator.TryValidate</definition>
        <argsstring>(string payloadJson, string signature, string[] decodedSignature, out Exception ex)</argsstring>
        <name>TryValidate</name>
        <qualifiedname>JWT.JwtValidator.TryValidate</qualifiedname>
        <reimplements refid="interface_j_w_t_1_1_i_jwt_validator_1a6be9333406c4dca495d0524a2a269d76">TryValidate</reimplements>
        <param>
          <type>string</type>
          <declname>payloadJson</declname>
        </param>
        <param>
          <type>string</type>
          <declname>signature</declname>
        </param>
        <param>
          <type>string[]</type>
          <declname>decodedSignature</declname>
        </param>
        <param>
          <type>out Exception</type>
          <declname>ex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><para>Given the <ref refid="namespace_j_w_t" kindref="compound">JWT</ref>, verifies its signature correctness without throwing an exception but returning it instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>payloadJson</parametername>
</parameternamelist>
<parameterdescription>
<para>&gt;An arbitrary payload (already serialized to JSON)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>signature</parametername>
</parameternamelist>
<parameterdescription>
<para>Decoded body</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>decodedSignature</parametername>
</parameternamelist>
<parameterdescription>
<para>The signatures to validate with</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ex</parametername>
</parameternamelist>
<parameterdescription>
<para>The resulting validation exception, if any</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Returns <computeroutput>true</computeroutput> if exception is <ref refid="namespace_j_w_t" kindref="compound">JWT</ref> is valid and exception is null, otherwise false</para>
</simplesect>
</para>
 <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="100" column="21" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="100" bodyend="104"/>
        <references refid="class_j_w_t_1_1_jwt_validator_1aff404e7ee56295dffae8e61130efe70d" compoundref="_jwt_validator_8cs" startline="114" endline="121">JWT.JwtValidator.GetValidationException</references>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_validator_1a274e40b60c7065846b331227ab99a92f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool JWT.JwtValidator.TryValidate</definition>
        <argsstring>(string payloadJson, IAsymmetricAlgorithm alg, byte[] bytesToSign, byte[] decodedSignature, out Exception ex)</argsstring>
        <name>TryValidate</name>
        <qualifiedname>JWT.JwtValidator.TryValidate</qualifiedname>
        <reimplements refid="interface_j_w_t_1_1_i_jwt_validator_1ad83594c87fa12d650d63b096550f9bef">TryValidate</reimplements>
        <param>
          <type>string</type>
          <declname>payloadJson</declname>
        </param>
        <param>
          <type><ref refid="interface_j_w_t_1_1_algorithms_1_1_i_asymmetric_algorithm" kindref="compound">IAsymmetricAlgorithm</ref></type>
          <declname>alg</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>bytesToSign</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>decodedSignature</declname>
        </param>
        <param>
          <type>out Exception</type>
          <declname>ex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><para>Given the <ref refid="namespace_j_w_t" kindref="compound">JWT</ref>, verifies its signatures correctness without throwing an exception but returning it instead.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>payloadJson</parametername>
</parameternamelist>
<parameterdescription>
<para>&gt;An arbitrary payload (already serialized to JSON)</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>alg</parametername>
</parameternamelist>
<parameterdescription>
<para>The asymmetric algorithm to validate with</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytesToSign</parametername>
</parameternamelist>
<parameterdescription>
<para>The header and payload bytes to validate</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>decodedSignature</parametername>
</parameternamelist>
<parameterdescription>
<para>The decodedSignatures to validate with</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ex</parametername>
</parameternamelist>
<parameterdescription>
<para>Validation exception, if any</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if exception is <ref refid="namespace_j_w_t" kindref="compound">JWT</ref> is valid and exception is null, otherwise false</para>
</simplesect>
</para>
 <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="108" column="21" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="108" bodyend="112"/>
        <references refid="class_j_w_t_1_1_jwt_validator_1aff404e7ee56295dffae8e61130efe70d" compoundref="_jwt_validator_8cs" startline="114" endline="121">JWT.JwtValidator.GetValidationException</references>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_validator_1aff404e7ee56295dffae8e61130efe70d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Exception</type>
        <definition>Exception JWT.JwtValidator.GetValidationException</definition>
        <argsstring>(JwtParts parts)</argsstring>
        <name>GetValidationException</name>
        <qualifiedname>JWT.JwtValidator.GetValidationException</qualifiedname>
        <param>
          <type><ref refid="class_j_w_t_1_1_jwt_parts" kindref="compound">JwtParts</ref></type>
          <declname>parts</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="114" column="26" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="114" bodyend="121"/>
        <references refid="class_j_w_t_1_1_jwt_validator_1aff404e7ee56295dffae8e61130efe70d" compoundref="_jwt_validator_8cs" startline="114" endline="121">JWT.JwtValidator.GetValidationException</references>
        <references refid="class_j_w_t_1_1_jwt_parts_1a0400db619b083247f0a6aae0fd0b155b" compoundref="_jwt_parts_8cs" startline="60">JWT.JwtParts.Payload</references>
        <referencedby refid="class_j_w_t_1_1_jwt_validator_1a9637d8a7c56f0e14048cc2a8ec3ccb8f" compoundref="_jwt_validator_8cs" startline="123" endline="127">JWT.JwtValidator.GetValidationException</referencedby>
        <referencedby refid="class_j_w_t_1_1_jwt_validator_1aff404e7ee56295dffae8e61130efe70d" compoundref="_jwt_validator_8cs" startline="114" endline="121">JWT.JwtValidator.GetValidationException</referencedby>
        <referencedby refid="class_j_w_t_1_1_jwt_validator_1a274e40b60c7065846b331227ab99a92f" compoundref="_jwt_validator_8cs" startline="108" endline="112">JWT.JwtValidator.TryValidate</referencedby>
        <referencedby refid="class_j_w_t_1_1_jwt_validator_1a729b5ad4f3b551b967bf6f0b1d558b56" compoundref="_jwt_validator_8cs" startline="92" endline="96">JWT.JwtValidator.TryValidate</referencedby>
        <referencedby refid="class_j_w_t_1_1_jwt_validator_1a4b76397cce0223e28bc1797b2827e7f4" compoundref="_jwt_validator_8cs" startline="100" endline="104">JWT.JwtValidator.TryValidate</referencedby>
        <referencedby refid="class_j_w_t_1_1_jwt_validator_1af52b2455c4d608013cd077fc41dd3421" compoundref="_jwt_validator_8cs" startline="83" endline="88">JWT.JwtValidator.Validate</referencedby>
        <referencedby refid="class_j_w_t_1_1_jwt_validator_1a40a34370eba0e6d1e71d9c585006e0c5" compoundref="_jwt_validator_8cs" startline="73" endline="78">JWT.JwtValidator.Validate</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_validator_1a9637d8a7c56f0e14048cc2a8ec3ccb8f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Exception</type>
        <definition>Exception JWT.JwtValidator.GetValidationException</definition>
        <argsstring>(byte[] bytes)</argsstring>
        <name>GetValidationException</name>
        <qualifiedname>JWT.JwtValidator.GetValidationException</qualifiedname>
        <param>
          <type>byte[]</type>
          <declname>bytes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="123" column="26" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="123" bodyend="127"/>
        <references refid="class_j_w_t_1_1_jwt_validator_1aff404e7ee56295dffae8e61130efe70d" compoundref="_jwt_validator_8cs" startline="114" endline="121">JWT.JwtValidator.GetValidationException</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_validator_1a6cc26ff6d8f2226591182237307e0f8a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Exception</type>
        <definition>Exception JWT.JwtValidator.GetValidationException</definition>
        <argsstring>(string payloadJson, string decodedCrypto, params string[] decodedSignatures)</argsstring>
        <name>GetValidationException</name>
        <qualifiedname>JWT.JwtValidator.GetValidationException</qualifiedname>
        <param>
          <type>string</type>
          <declname>payloadJson</declname>
        </param>
        <param>
          <type>string</type>
          <declname>decodedCrypto</declname>
        </param>
        <param>
          <type>params string[]</type>
          <declname>decodedSignatures</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="129" column="27" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="129" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_validator_1a5e8115e76a698d30bd6dda9b3aaa5a47" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Exception</type>
        <definition>Exception JWT.JwtValidator.GetValidationException</definition>
        <argsstring>(IAsymmetricAlgorithm alg, string payloadJson, byte[] bytesToSign, byte[] decodedSignature)</argsstring>
        <name>GetValidationException</name>
        <qualifiedname>JWT.JwtValidator.GetValidationException</qualifiedname>
        <param>
          <type><ref refid="interface_j_w_t_1_1_algorithms_1_1_i_asymmetric_algorithm" kindref="compound">IAsymmetricAlgorithm</ref></type>
          <declname>alg</declname>
        </param>
        <param>
          <type>string</type>
          <declname>payloadJson</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>bytesToSign</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>decodedSignature</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="140" column="27" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="140" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_validator_1a05ec45bb51a50eb6daecd94c0bb0b110" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Exception</type>
        <definition>Exception JWT.JwtValidator.GetValidationException</definition>
        <argsstring>(string payloadJson)</argsstring>
        <name>GetValidationException</name>
        <qualifiedname>JWT.JwtValidator.GetValidationException</qualifiedname>
        <param>
          <type>string</type>
          <declname>payloadJson</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="148" column="27" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="148" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_validator_1a69937b254c97e788c7a73221e6e28445" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Exception</type>
        <definition>Exception JWT.JwtValidator.ValidateExpClaim</definition>
        <argsstring>(IReadOnlyPayloadDictionary payloadData, double secondsSinceEpoch)</argsstring>
        <name>ValidateExpClaim</name>
        <qualifiedname>JWT.JwtValidator.ValidateExpClaim</qualifiedname>
        <param>
          <type><ref refid="_token_expired_exception_8cs_1a49f7c509ca28625003350370ad50589b" kindref="member">IReadOnlyPayloadDictionary</ref></type>
          <declname>payloadData</declname>
        </param>
        <param>
          <type>double</type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Verifies the &apos;exp&apos; claim. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ulink url="https://tools.ietf.org/html/rfc7519#section-4.1.4">https://tools.ietf.org/html/rfc7519#section-4.1.4</ulink></para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>SignatureVerificationException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TokenExpiredException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="203" column="27" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="203" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_validator_1a1f5919a2d28169e502ad5a4195c979f2" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Exception</type>
        <definition>Exception JWT.JwtValidator.ValidateNbfClaim</definition>
        <argsstring>(IReadOnlyPayloadDictionary payloadData, double secondsSinceEpoch)</argsstring>
        <name>ValidateNbfClaim</name>
        <qualifiedname>JWT.JwtValidator.ValidateNbfClaim</qualifiedname>
        <param>
          <type><ref refid="_token_expired_exception_8cs_1a49f7c509ca28625003350370ad50589b" kindref="member">IReadOnlyPayloadDictionary</ref></type>
          <declname>payloadData</declname>
        </param>
        <param>
          <type>double</type>
          <declname>secondsSinceEpoch</declname>
        </param>
        <briefdescription>
<para>Verifies the &apos;nbf&apos; claim. </para>
        </briefdescription>
        <detaileddescription>
<para>See <ulink url="https://tools.ietf.org/html/rfc7519#section-4.1.5">https://tools.ietf.org/html/rfc7519#section-4.1.5</ulink></para>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>SignatureVerificationException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="238" column="27" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="238" bodyend="266"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_validator_1ad4958f501791e6af98709c554d73d8dd" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool JWT.JwtValidator.AreAllDecodedSignaturesNullOrWhiteSpace</definition>
        <argsstring>(string[] decodedSignatures)</argsstring>
        <name>AreAllDecodedSignaturesNullOrWhiteSpace</name>
        <qualifiedname>JWT.JwtValidator.AreAllDecodedSignaturesNullOrWhiteSpace</qualifiedname>
        <param>
          <type>string[]</type>
          <declname>decodedSignatures</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="173" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_validator_1a1d3c268f5609bcef27529d5a381d32f5" prot="private" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>static bool JWT.JwtValidator.IsAnySignatureValid</definition>
        <argsstring>(string decodedCrypto, string[] decodedSignatures)</argsstring>
        <name>IsAnySignatureValid</name>
        <qualifiedname>JWT.JwtValidator.IsAnySignatureValid</qualifiedname>
        <param>
          <type>string</type>
          <declname>decodedCrypto</declname>
        </param>
        <param>
          <type>string[]</type>
          <declname>decodedSignatures</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="176" column="29"/>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_validator_1ad65f48874fd25c96bc7dd6af7a4d46c4" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool JWT.JwtValidator.CompareCryptoWithSignature</definition>
        <argsstring>(string decodedCrypto, string decodedSignature)</argsstring>
        <name>CompareCryptoWithSignature</name>
        <qualifiedname>JWT.JwtValidator.CompareCryptoWithSignature</qualifiedname>
        <param>
          <type>string</type>
          <declname>decodedCrypto</declname>
        </param>
        <param>
          <type>string</type>
          <declname>decodedSignature</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>In the future this method can be opened for extension hence made protected virtual</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="180" column="29" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="180" bodyend="195"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Jwt validator. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>IJwtValidator</label>
        <link refid="interface_j_w_t_1_1_i_jwt_validator"/>
      </node>
      <node id="1">
        <label>JWT.JwtValidator</label>
        <link refid="class_j_w_t_1_1_jwt_validator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>IJwtValidator</label>
        <link refid="interface_j_w_t_1_1_i_jwt_validator"/>
      </node>
      <node id="1">
        <label>JWT.JwtValidator</label>
        <link refid="class_j_w_t_1_1_jwt_validator"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" line="25" column="18" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtValidator.cs" bodystart="26" bodyend="267"/>
    <listofallmembers>
      <member refid="class_j_w_t_1_1_jwt_validator_1ab44af40bd95692d85ff8894e3d755d22" prot="private" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>_dateTimeProvider</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1a19debfb3f1cb211eebd8fcf5221f9162" prot="private" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>_jsonSerializer</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1afd49163920f08416822341d324b90262" prot="private" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>_urlEncoder</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1a41b32ce8eab76004c81a89779a32d9c5" prot="private" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>_valParams</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1ad4958f501791e6af98709c554d73d8dd" prot="private" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>AreAllDecodedSignaturesNullOrWhiteSpace</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1ad65f48874fd25c96bc7dd6af7a4d46c4" prot="private" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>CompareCryptoWithSignature</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1aff404e7ee56295dffae8e61130efe70d" prot="public" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>GetValidationException</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1a9637d8a7c56f0e14048cc2a8ec3ccb8f" prot="public" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>GetValidationException</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1a6cc26ff6d8f2226591182237307e0f8a" prot="private" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>GetValidationException</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1a5e8115e76a698d30bd6dda9b3aaa5a47" prot="private" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>GetValidationException</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1a05ec45bb51a50eb6daecd94c0bb0b110" prot="private" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>GetValidationException</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1a1d3c268f5609bcef27529d5a381d32f5" prot="private" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>IsAnySignatureValid</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1a0b251406739a3f8f0b5bfb7311be3bf7" prot="public" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>JwtValidator</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1a7c6951bf8bea525d0ce7360dfdfa3861" prot="public" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>JwtValidator</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1a6b2c67683dfd55b5ff182814eca91560" prot="public" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>JwtValidator</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1a729b5ad4f3b551b967bf6f0b1d558b56" prot="public" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>TryValidate</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1a4b76397cce0223e28bc1797b2827e7f4" prot="public" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>TryValidate</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1a274e40b60c7065846b331227ab99a92f" prot="public" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>TryValidate</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1a40a34370eba0e6d1e71d9c585006e0c5" prot="public" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>Validate</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1af52b2455c4d608013cd077fc41dd3421" prot="public" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>Validate</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1a69937b254c97e788c7a73221e6e28445" prot="private" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>ValidateExpClaim</name></member>
      <member refid="class_j_w_t_1_1_jwt_validator_1a1f5919a2d28169e502ad5a4195c979f2" prot="private" virt="non-virtual"><scope>JWT::JwtValidator</scope><name>ValidateNbfClaim</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
