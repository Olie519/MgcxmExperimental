<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation" kind="class" language="C#" prot="public">
    <compoundname>Openlabs::Mgcxm::Internal::SafeInvocation</compoundname>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a652aa5f17c53995009478da3c6aeb753" prot="private" static="yes" mutable="no">
        <type>const string</type>
        <definition>const string Openlabs.Mgcxm.Internal.SafeInvocation.DEFAULT_ERROR_MESSAGE</definition>
        <argsstring></argsstring>
        <name>DEFAULT_ERROR_MESSAGE</name>
        <qualifiedname>Openlabs.Mgcxm.Internal.SafeInvocation.DEFAULT_ERROR_MESSAGE</qualifiedname>
        <initializer>= &quot;Unexpected error <ref refid="_program_8cs_1aa42b148603fa31e853bd5122bce692ca" kindref="member">while</ref> safely invoking action&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Internal/SafeInvocation.cs" line="66" column="26" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Internal/SafeInvocation.cs" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a957a0b199ef8d6e04e85cae96af3c6fd" prot="private" static="yes" mutable="no">
        <type>const string</type>
        <definition>const string Openlabs.Mgcxm.Internal.SafeInvocation.TYPE_FULL_NAME</definition>
        <argsstring></argsstring>
        <name>TYPE_FULL_NAME</name>
        <qualifiedname>Openlabs.Mgcxm.Internal.SafeInvocation.TYPE_FULL_NAME</qualifiedname>
        <initializer>= &quot;System.Type&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Internal/SafeInvocation.cs" line="67" column="26" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Internal/SafeInvocation.cs" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a2a35a039e73d40157c250d1bca80d403" prot="private" static="yes" mutable="no">
        <type>const string</type>
        <definition>const string Openlabs.Mgcxm.Internal.SafeInvocation.EXCEPTION_FULL_NAME</definition>
        <argsstring></argsstring>
        <name>EXCEPTION_FULL_NAME</name>
        <qualifiedname>Openlabs.Mgcxm.Internal.SafeInvocation.EXCEPTION_FULL_NAME</qualifiedname>
        <initializer>= &quot;System.Exception&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Internal/SafeInvocation.cs" line="68" column="26" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Internal/SafeInvocation.cs" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a1ada4dc757be58e1caaeaaf7d4732bbe" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Openlabs.Mgcxm.Internal.SafeInvocation.InvokeSafe</definition>
        <argsstring>(this Action action)</argsstring>
        <name>InvokeSafe</name>
        <qualifiedname>Openlabs.Mgcxm.Internal.SafeInvocation.InvokeSafe</qualifiedname>
        <param>
          <type>this Action</type>
          <declname>action</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Internal/SafeInvocation.cs" line="12" column="24"/>
      </memberdef>
      <memberdef kind="function" id="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1ab450a863dbcfd043e0b8693f1a9f7e4d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Openlabs.Mgcxm.Internal.SafeInvocation.InvokeSafe&lt; T &gt;</definition>
        <argsstring>(this Action&lt; T &gt; action, T arg1)</argsstring>
        <name>InvokeSafe&lt; T &gt;</name>
        <qualifiedname>Openlabs.Mgcxm.Internal.SafeInvocation.InvokeSafe&lt; T &gt;</qualifiedname>
        <param>
          <type>this Action&lt; T &gt;</type>
          <declname>action</declname>
        </param>
        <param>
          <type>T</type>
          <declname>arg1</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Internal/SafeInvocation.cs" line="15" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a573d3d3a9bb39fd55fd44c09807ca6a6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Openlabs.Mgcxm.Internal.SafeInvocation.InvokeSafe&lt; T, T1 &gt;</definition>
        <argsstring>(this Action&lt; T &gt; action, T arg1, T1 arg2)</argsstring>
        <name>InvokeSafe&lt; T, T1 &gt;</name>
        <qualifiedname>Openlabs.Mgcxm.Internal.SafeInvocation.InvokeSafe&lt; T, T1 &gt;</qualifiedname>
        <param>
          <type>this Action&lt; T &gt;</type>
          <declname>action</declname>
        </param>
        <param>
          <type>T</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>T1</type>
          <declname>arg2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Internal/SafeInvocation.cs" line="18" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a46e33b91625db5bfc0c99b4792415b10" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Openlabs.Mgcxm.Internal.SafeInvocation.InvokeSafe&lt; T, T1, T2 &gt;</definition>
        <argsstring>(this Action&lt; T &gt; action, T arg1, T1 arg2, T2 arg3)</argsstring>
        <name>InvokeSafe&lt; T, T1, T2 &gt;</name>
        <qualifiedname>Openlabs.Mgcxm.Internal.SafeInvocation.InvokeSafe&lt; T, T1, T2 &gt;</qualifiedname>
        <param>
          <type>this Action&lt; T &gt;</type>
          <declname>action</declname>
        </param>
        <param>
          <type>T</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>T1</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>T2</type>
          <declname>arg3</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Internal/SafeInvocation.cs" line="21" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a9573030be74b0e01c717cefc6d4cde63" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Openlabs.Mgcxm.Internal.SafeInvocation.InvokeSafe&lt; T, T1, T2, T3 &gt;</definition>
        <argsstring>(this Action&lt; T &gt; action, T arg1, T1 arg2, T2 arg3, T3 arg4)</argsstring>
        <name>InvokeSafe&lt; T, T1, T2, T3 &gt;</name>
        <qualifiedname>Openlabs.Mgcxm.Internal.SafeInvocation.InvokeSafe&lt; T, T1, T2, T3 &gt;</qualifiedname>
        <param>
          <type>this Action&lt; T &gt;</type>
          <declname>action</declname>
        </param>
        <param>
          <type>T</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>T1</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>T2</type>
          <declname>arg3</declname>
        </param>
        <param>
          <type>T3</type>
          <declname>arg4</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Internal/SafeInvocation.cs" line="24" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1aca549ecdf53e4142e73280c53bb9292a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Openlabs.Mgcxm.Internal.SafeInvocation.InvokeSafe&lt; T, T1, T2, T3, T4 &gt;</definition>
        <argsstring>(this Action&lt; T &gt; action, T arg1, T1 arg2, T2 arg3, T3 arg4, T4 arg5)</argsstring>
        <name>InvokeSafe&lt; T, T1, T2, T3, T4 &gt;</name>
        <qualifiedname>Openlabs.Mgcxm.Internal.SafeInvocation.InvokeSafe&lt; T, T1, T2, T3, T4 &gt;</qualifiedname>
        <param>
          <type>this Action&lt; T &gt;</type>
          <declname>action</declname>
        </param>
        <param>
          <type>T</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>T1</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>T2</type>
          <declname>arg3</declname>
        </param>
        <param>
          <type>T3</type>
          <declname>arg4</declname>
        </param>
        <param>
          <type>T4</type>
          <declname>arg5</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Internal/SafeInvocation.cs" line="27" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a1e438eefa16188d18526f0103c967f66" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Openlabs.Mgcxm.Internal.SafeInvocation.InvokeSafe&lt; T, T1, T2, T3, T4, T5 &gt;</definition>
        <argsstring>(this Action&lt; T &gt; action, T arg1, T1 arg2, T2 arg3, T3 arg4, T4 arg5, T5 arg6)</argsstring>
        <name>InvokeSafe&lt; T, T1, T2, T3, T4, T5 &gt;</name>
        <qualifiedname>Openlabs.Mgcxm.Internal.SafeInvocation.InvokeSafe&lt; T, T1, T2, T3, T4, T5 &gt;</qualifiedname>
        <param>
          <type>this Action&lt; T &gt;</type>
          <declname>action</declname>
        </param>
        <param>
          <type>T</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>T1</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>T2</type>
          <declname>arg3</declname>
        </param>
        <param>
          <type>T3</type>
          <declname>arg4</declname>
        </param>
        <param>
          <type>T4</type>
          <declname>arg5</declname>
        </param>
        <param>
          <type>T5</type>
          <declname>arg6</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Internal/SafeInvocation.cs" line="30" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a7acfd70cac81893ae630962eff1d731f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void Openlabs.Mgcxm.Internal.SafeInvocation.InvokeSafe&lt; T, T1, T2, T3, T4, T5, T6 &gt;</definition>
        <argsstring>(this Action&lt; T &gt; action, T arg1, T1 arg2, T2 arg3, T3 arg4, T4 arg5, T5 arg6, T6 arg7)</argsstring>
        <name>InvokeSafe&lt; T, T1, T2, T3, T4, T5, T6 &gt;</name>
        <qualifiedname>Openlabs.Mgcxm.Internal.SafeInvocation.InvokeSafe&lt; T, T1, T2, T3, T4, T5, T6 &gt;</qualifiedname>
        <param>
          <type>this Action&lt; T &gt;</type>
          <declname>action</declname>
        </param>
        <param>
          <type>T</type>
          <declname>arg1</declname>
        </param>
        <param>
          <type>T1</type>
          <declname>arg2</declname>
        </param>
        <param>
          <type>T2</type>
          <declname>arg3</declname>
        </param>
        <param>
          <type>T3</type>
          <declname>arg4</declname>
        </param>
        <param>
          <type>T4</type>
          <declname>arg5</declname>
        </param>
        <param>
          <type>T5</type>
          <declname>arg6</declname>
        </param>
        <param>
          <type>T6</type>
          <declname>arg7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Internal/SafeInvocation.cs" line="33" column="19"/>
      </memberdef>
      <memberdef kind="function" id="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a9a84dac41b60a2f148a89f78dd1ce0ca" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>static void Openlabs.Mgcxm.Internal.SafeInvocation.InvokeSafeExplicit</definition>
        <argsstring>(Delegate action, object[] args, Type exceptionToThrow=null, string message=DEFAULT_ERROR_MESSAGE)</argsstring>
        <name>InvokeSafeExplicit</name>
        <qualifiedname>Openlabs.Mgcxm.Internal.SafeInvocation.InvokeSafeExplicit</qualifiedname>
        <param>
          <type>Delegate</type>
          <declname>action</declname>
        </param>
        <param>
          <type>object[]</type>
          <declname>args</declname>
        </param>
        <param>
          <type>Type</type>
          <declname>exceptionToThrow</declname>
          <defval>null</defval>
        </param>
        <param>
          <type>string</type>
          <declname>message</declname>
          <defval>DEFAULT_ERROR_MESSAGE</defval>
        </param>
        <briefdescription>
<para>Invokes the <emphasis>action</emphasis>  safely. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>action</parametername>
</parameternamelist>
<parameterdescription>
<para>The action to invoke.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>args</parametername>
</parameternamelist>
<parameterdescription>
<para>The arguments needed to invoke the action.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>exceptionToThrow</parametername>
</parameternamelist>
<parameterdescription>
<para>The exception to throw if the invocation was a failure. Defaults to Exception.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The message to throw.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>InvalidOperationException</parametername>
</parameternamelist>
<parameterdescription>
<para>If the <emphasis>exceptionToThrow</emphasis>  does not directly inherit Exception.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Exception</parametername>
</parameternamelist>
<parameterdescription>
<para>Default exception that throws if no <emphasis>exceptionToThrow</emphasis>  type was given.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Internal/SafeInvocation.cs" line="45" column="24" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Internal/SafeInvocation.cs" bodystart="45" bodyend="57"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a133c468b12b4206fa408bbda68ab8a60" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool Openlabs.Mgcxm.Internal.SafeInvocation.IsExceptionType</definition>
        <argsstring>(Type type)</argsstring>
        <name>IsExceptionType</name>
        <qualifiedname>Openlabs.Mgcxm.Internal.SafeInvocation.IsExceptionType</qualifiedname>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Internal/SafeInvocation.cs" line="59" column="25" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Internal/SafeInvocation.cs" bodystart="59" bodyend="64"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Static class that handles the safe invocation of an Action. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Internal/SafeInvocation.cs" line="10" column="15" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/Internal/SafeInvocation.cs" bodystart="11" bodyend="69"/>
    <listofallmembers>
      <member refid="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a652aa5f17c53995009478da3c6aeb753" prot="private" virt="non-virtual"><scope>Openlabs::Mgcxm::Internal::SafeInvocation</scope><name>DEFAULT_ERROR_MESSAGE</name></member>
      <member refid="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a2a35a039e73d40157c250d1bca80d403" prot="private" virt="non-virtual"><scope>Openlabs::Mgcxm::Internal::SafeInvocation</scope><name>EXCEPTION_FULL_NAME</name></member>
      <member refid="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a1ada4dc757be58e1caaeaaf7d4732bbe" prot="public" virt="non-virtual"><scope>Openlabs::Mgcxm::Internal::SafeInvocation</scope><name>InvokeSafe</name></member>
      <member refid="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1ab450a863dbcfd043e0b8693f1a9f7e4d" prot="public" virt="non-virtual"><scope>Openlabs::Mgcxm::Internal::SafeInvocation</scope><name>InvokeSafe&lt; T &gt;</name></member>
      <member refid="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a573d3d3a9bb39fd55fd44c09807ca6a6" prot="public" virt="non-virtual"><scope>Openlabs::Mgcxm::Internal::SafeInvocation</scope><name>InvokeSafe&lt; T, T1 &gt;</name></member>
      <member refid="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a46e33b91625db5bfc0c99b4792415b10" prot="public" virt="non-virtual"><scope>Openlabs::Mgcxm::Internal::SafeInvocation</scope><name>InvokeSafe&lt; T, T1, T2 &gt;</name></member>
      <member refid="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a9573030be74b0e01c717cefc6d4cde63" prot="public" virt="non-virtual"><scope>Openlabs::Mgcxm::Internal::SafeInvocation</scope><name>InvokeSafe&lt; T, T1, T2, T3 &gt;</name></member>
      <member refid="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1aca549ecdf53e4142e73280c53bb9292a" prot="public" virt="non-virtual"><scope>Openlabs::Mgcxm::Internal::SafeInvocation</scope><name>InvokeSafe&lt; T, T1, T2, T3, T4 &gt;</name></member>
      <member refid="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a1e438eefa16188d18526f0103c967f66" prot="public" virt="non-virtual"><scope>Openlabs::Mgcxm::Internal::SafeInvocation</scope><name>InvokeSafe&lt; T, T1, T2, T3, T4, T5 &gt;</name></member>
      <member refid="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a7acfd70cac81893ae630962eff1d731f" prot="public" virt="non-virtual"><scope>Openlabs::Mgcxm::Internal::SafeInvocation</scope><name>InvokeSafe&lt; T, T1, T2, T3, T4, T5, T6 &gt;</name></member>
      <member refid="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a9a84dac41b60a2f148a89f78dd1ce0ca" prot="public" virt="non-virtual"><scope>Openlabs::Mgcxm::Internal::SafeInvocation</scope><name>InvokeSafeExplicit</name></member>
      <member refid="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a133c468b12b4206fa408bbda68ab8a60" prot="private" virt="non-virtual"><scope>Openlabs::Mgcxm::Internal::SafeInvocation</scope><name>IsExceptionType</name></member>
      <member refid="class_openlabs_1_1_mgcxm_1_1_internal_1_1_safe_invocation_1a957a0b199ef8d6e04e85cae96af3c6fd" prot="private" virt="non-virtual"><scope>Openlabs::Mgcxm::Internal::SafeInvocation</scope><name>TYPE_FULL_NAME</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
