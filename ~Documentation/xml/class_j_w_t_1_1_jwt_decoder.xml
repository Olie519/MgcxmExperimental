<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="class_j_w_t_1_1_jwt_decoder" kind="class" language="C#" prot="public">
    <compoundname>JWT::JwtDecoder</compoundname>
    <basecompoundref refid="interface_j_w_t_1_1_i_jwt_decoder" prot="public" virt="non-virtual">JWT.IJwtDecoder</basecompoundref>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_j_w_t_1_1_jwt_decoder_1a9739e4ccd93109941d74cd8764fdc2c4" prot="private" static="no" mutable="no">
        <type>readonly <ref refid="interface_j_w_t_1_1_i_json_serializer" kindref="compound">IJsonSerializer</ref></type>
        <definition>readonly IJsonSerializer JWT.JwtDecoder._jsonSerializer</definition>
        <argsstring></argsstring>
        <name>_jsonSerializer</name>
        <qualifiedname>JWT.JwtDecoder._jsonSerializer</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="18" column="42" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_j_w_t_1_1_jwt_decoder_1ad1b4a55ca88867452ddff83faa0d9d81" prot="private" static="no" mutable="no">
        <type>readonly <ref refid="interface_j_w_t_1_1_i_jwt_validator" kindref="compound">IJwtValidator</ref></type>
        <definition>readonly IJwtValidator JWT.JwtDecoder._jwtValidator</definition>
        <argsstring></argsstring>
        <name>_jwtValidator</name>
        <qualifiedname>JWT.JwtDecoder._jwtValidator</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="19" column="40" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_j_w_t_1_1_jwt_decoder_1ab0eabf7a23fab03948a6bde0c54ba0a6" prot="private" static="no" mutable="no">
        <type>readonly <ref refid="interface_j_w_t_1_1_i_base64_url_encoder" kindref="compound">IBase64UrlEncoder</ref></type>
        <definition>readonly IBase64UrlEncoder JWT.JwtDecoder._urlEncoder</definition>
        <argsstring></argsstring>
        <name>_urlEncoder</name>
        <qualifiedname>JWT.JwtDecoder._urlEncoder</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="20" column="44" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_j_w_t_1_1_jwt_decoder_1a2151ece20a55696d3b34d6713368a718" prot="private" static="no" mutable="no">
        <type>readonly <ref refid="interface_j_w_t_1_1_algorithms_1_1_i_algorithm_factory" kindref="compound">IAlgorithmFactory</ref></type>
        <definition>readonly IAlgorithmFactory JWT.JwtDecoder._algFactory</definition>
        <argsstring></argsstring>
        <name>_algFactory</name>
        <qualifiedname>JWT.JwtDecoder._algFactory</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="21" column="44" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" bodystart="21" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_decoder_1a1669a519db4a6b5b767a3980d859a0e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>JWT.JwtDecoder.JwtDecoder</definition>
        <argsstring>(IJsonSerializer jsonSerializer, IBase64UrlEncoder urlEncoder)</argsstring>
        <name>JwtDecoder</name>
        <qualifiedname>JWT.JwtDecoder.JwtDecoder</qualifiedname>
        <param>
          <type><ref refid="interface_j_w_t_1_1_i_json_serializer" kindref="compound">IJsonSerializer</ref></type>
          <declname>jsonSerializer</declname>
        </param>
        <param>
          <type><ref refid="interface_j_w_t_1_1_i_base64_url_encoder" kindref="compound">IBase64UrlEncoder</ref></type>
          <declname>urlEncoder</declname>
        </param>
        <briefdescription>
<para>Creates an instance of JwtDecoder </para>
        </briefdescription>
        <detaileddescription>
<para>This overload supplies no IJwtValidator and no IAlgorithmFactory so the resulting decoder cannot be used for signature validation. </para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jsonSerializer</parametername>
</parameternamelist>
<parameterdescription>
<para>The JSON serializer</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>urlEncoder</parametername>
</parameternamelist>
<parameterdescription>
<para>The base64 URL encoder</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="32" column="16" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" bodystart="32" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_decoder_1aaea7a84a35ac5e57e73497c086b4a259" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>JWT.JwtDecoder.JwtDecoder</definition>
        <argsstring>(IJsonSerializer jsonSerializer, IJwtValidator jwtValidator, IBase64UrlEncoder urlEncoder, IAlgorithmFactory algFactory)</argsstring>
        <name>JwtDecoder</name>
        <qualifiedname>JWT.JwtDecoder.JwtDecoder</qualifiedname>
        <param>
          <type><ref refid="interface_j_w_t_1_1_i_json_serializer" kindref="compound">IJsonSerializer</ref></type>
          <declname>jsonSerializer</declname>
        </param>
        <param>
          <type><ref refid="interface_j_w_t_1_1_i_jwt_validator" kindref="compound">IJwtValidator</ref></type>
          <declname>jwtValidator</declname>
        </param>
        <param>
          <type><ref refid="interface_j_w_t_1_1_i_base64_url_encoder" kindref="compound">IBase64UrlEncoder</ref></type>
          <declname>urlEncoder</declname>
        </param>
        <param>
          <type><ref refid="interface_j_w_t_1_1_algorithms_1_1_i_algorithm_factory" kindref="compound">IAlgorithmFactory</ref></type>
          <declname>algFactory</declname>
        </param>
        <briefdescription>
<para>Creates an instance of JwtDecoder </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jsonSerializer</parametername>
</parameternamelist>
<parameterdescription>
<para>The JSON serializer</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jwtValidator</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespace_j_w_t" kindref="compound">JWT</ref> validator</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>urlEncoder</parametername>
</parameternamelist>
<parameterdescription>
<para>The base64 URL encoder</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>algFactory</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespace_j_w_t" kindref="compound">JWT</ref> algorithm Factory</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="46" column="16" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" bodystart="46" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_decoder_1ac0c2fb4e1a500bcedc6657003304b605" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>JWT.JwtDecoder.JwtDecoder</definition>
        <argsstring>(IJsonSerializer jsonSerializer, IJwtValidator jwtValidator, IBase64UrlEncoder urlEncoder, IJwtAlgorithm algorithm)</argsstring>
        <name>JwtDecoder</name>
        <qualifiedname>JWT.JwtDecoder.JwtDecoder</qualifiedname>
        <param>
          <type><ref refid="interface_j_w_t_1_1_i_json_serializer" kindref="compound">IJsonSerializer</ref></type>
          <declname>jsonSerializer</declname>
        </param>
        <param>
          <type><ref refid="interface_j_w_t_1_1_i_jwt_validator" kindref="compound">IJwtValidator</ref></type>
          <declname>jwtValidator</declname>
        </param>
        <param>
          <type><ref refid="interface_j_w_t_1_1_i_base64_url_encoder" kindref="compound">IBase64UrlEncoder</ref></type>
          <declname>urlEncoder</declname>
        </param>
        <param>
          <type><ref refid="interface_j_w_t_1_1_algorithms_1_1_i_jwt_algorithm" kindref="compound">IJwtAlgorithm</ref></type>
          <declname>algorithm</declname>
        </param>
        <briefdescription>
<para>Creates an instance of JwtDecoder </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jsonSerializer</parametername>
</parameternamelist>
<parameterdescription>
<para>The JSON serializer</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jwtValidator</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespace_j_w_t" kindref="compound">JWT</ref> validator</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>urlEncoder</parametername>
</parameternamelist>
<parameterdescription>
<para>The base64 URL encoder</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>algorithm</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespace_j_w_t" kindref="compound">JWT</ref> algorithm</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="61" column="16" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_decoder_1ad35c18371276f882263a129147d56033" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string JWT.JwtDecoder.DecodeHeader</definition>
        <argsstring>(string token)</argsstring>
        <name>DecodeHeader</name>
        <qualifiedname>JWT.JwtDecoder.DecodeHeader</qualifiedname>
        <reimplements refid="interface_j_w_t_1_1_i_jwt_decoder_1ace2a937b6e306e573691765a734ea422">DecodeHeader</reimplements>
        <param>
          <type>string</type>
          <declname>token</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><para>Given a <ref refid="namespace_j_w_t" kindref="compound">JWT</ref>, decodes it and return the header.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>token</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespace_j_w_t" kindref="compound">JWT</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
 <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>InvalidTokenPartsException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>FormatException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="70" column="23" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" bodystart="70" bodyend="78"/>
        <references refid="class_j_w_t_1_1_jwt_parts_1ad166528ca24913ae525bfbfaa398fc53" compoundref="_jwt_parts_8cs" startline="54">JWT.JwtParts.Header</references>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_decoder_1ae455c9bb547b6cd16fa7f46c80919934" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T JWT.JwtDecoder.DecodeHeader&lt; T &gt;</definition>
        <argsstring>(JwtParts jwt)</argsstring>
        <name>DecodeHeader&lt; T &gt;</name>
        <qualifiedname>JWT.JwtDecoder.DecodeHeader&lt; T &gt;</qualifiedname>
        <reimplements refid="interface_j_w_t_1_1_i_jwt_decoder_1abc3c3b456952aa67044a399fe4df95c1">DecodeHeader&lt; T &gt;</reimplements>
        <param>
          <type><ref refid="class_j_w_t_1_1_jwt_parts" kindref="compound">JwtParts</ref></type>
          <declname>jwt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><para>Given a <ref refid="namespace_j_w_t" kindref="compound">JWT</ref>, decodes it and return the header as an object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jwt</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespace_j_w_t" kindref="compound">JWT</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
 <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>FormatException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="84" column="16" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" bodystart="84" bodyend="92"/>
        <references refid="class_j_w_t_1_1_jwt_parts_1ad166528ca24913ae525bfbfaa398fc53" compoundref="_jwt_parts_8cs" startline="54">JWT.JwtParts.Header</references>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_decoder_1aa14378f1bcd2782f35a6d4e4d77ee5c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string JWT.JwtDecoder.Decode</definition>
        <argsstring>(JwtParts jwt, bool verify)</argsstring>
        <name>Decode</name>
        <qualifiedname>JWT.JwtDecoder.Decode</qualifiedname>
        <reimplements refid="interface_j_w_t_1_1_i_jwt_decoder_1ac72a33117bbb87d4955c5e31eaa9f082">Decode</reimplements>
        <param>
          <type><ref refid="class_j_w_t_1_1_jwt_parts" kindref="compound">JwtParts</ref></type>
          <declname>jwt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verify</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><para>Given a <ref refid="namespace_j_w_t" kindref="compound">JWT</ref>, decodes it and return the payload.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jwt</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespace_j_w_t" kindref="compound">JWT</ref></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verify</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to verify the signature (default is true)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A string containing the JSON payload</para>
</simplesect>
</para>
 <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentOutOfRangeException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>InvalidTokenPartsException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>FormatException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>SignatureVerificationException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TokenNotYetValidException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TokenExpiredException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="103" column="23"/>
        <referencedby refid="class_j_w_t_1_1_jwt_decoder_1a8cb3413ad89a3c4ce4cd00b354aad0d5" compoundref="_jwt_decoder_8cs" startline="126" endline="145">JWT.JwtDecoder.Decode</referencedby>
        <referencedby refid="class_j_w_t_1_1_jwt_decoder_1a4cfae033fd0e63870039a95ce0da08dc" compoundref="_jwt_decoder_8cs" startline="155" endline="159">JWT.JwtDecoder.DecodeToObject</referencedby>
        <referencedby refid="class_j_w_t_1_1_jwt_decoder_1ad74fea61e5832bb49489843a24564d1c" compoundref="_jwt_decoder_8cs" startline="169" endline="173">JWT.JwtDecoder.DecodeToObject</referencedby>
        <referencedby refid="class_j_w_t_1_1_jwt_decoder_1a4aedfc167e223098ef880b2f059737c4" compoundref="_jwt_decoder_8cs" startline="183" endline="187">JWT.JwtDecoder.DecodeToObject</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_decoder_1a66055439f5767767fffe090669e4f97f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>string</type>
        <definition>string JWT.JwtDecoder.Decode</definition>
        <argsstring>(JwtParts jwt, byte[] key, bool verify)</argsstring>
        <name>Decode</name>
        <qualifiedname>JWT.JwtDecoder.Decode</qualifiedname>
        <reimplements refid="interface_j_w_t_1_1_i_jwt_decoder_1ac13bd195a85713439290861a005e3f64">Decode</reimplements>
        <param>
          <type><ref refid="class_j_w_t_1_1_jwt_parts" kindref="compound">JwtParts</ref></type>
          <declname>jwt</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verify</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><para>Given a <ref refid="namespace_j_w_t" kindref="compound">JWT</ref>, decodes it and return the payload.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jwt</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespace_j_w_t" kindref="compound">JWT</ref></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key that were used to sign the <ref refid="namespace_j_w_t" kindref="compound">JWT</ref></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verify</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to verify the signature (default is true)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A string containing the JSON payload</para>
</simplesect>
</para>
 <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentOutOfRangeException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>InvalidTokenPartsException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>FormatException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>SignatureVerificationException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TokenNotYetValidException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TokenExpiredException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="115" column="23"/>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_decoder_1a8cb3413ad89a3c4ce4cd00b354aad0d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string JWT.JwtDecoder.Decode</definition>
        <argsstring>(JwtParts jwt, byte[][] keys, bool verify)</argsstring>
        <name>Decode</name>
        <qualifiedname>JWT.JwtDecoder.Decode</qualifiedname>
        <reimplements refid="interface_j_w_t_1_1_i_jwt_decoder_1aca98278477e9a8696d8e3673703896d2">Decode</reimplements>
        <param>
          <type><ref refid="class_j_w_t_1_1_jwt_parts" kindref="compound">JwtParts</ref></type>
          <declname>jwt</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>keys</declname>
          <array>[][]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>verify</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><para>Given a <ref refid="namespace_j_w_t" kindref="compound">JWT</ref>, decodes it and return the payload.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jwt</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespace_j_w_t" kindref="compound">JWT</ref></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>The keys provided which one of them was used to sign the <ref refid="namespace_j_w_t" kindref="compound">JWT</ref></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verify</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to verify the signature (default is true)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A string containing the JSON payload</para>
</simplesect>
</para>
 <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentOutOfRangeException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>FormatException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>SignatureVerificationException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TokenNotYetValidException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TokenExpiredException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="126" column="23" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" bodystart="126" bodyend="145"/>
        <references refid="class_j_w_t_1_1_jwt_decoder_1aa14378f1bcd2782f35a6d4e4d77ee5c7">JWT.JwtDecoder.Decode</references>
        <references refid="class_j_w_t_1_1_jwt_decoder_1a9b8bcc4b3a140f8087fc36edb2c154fe">JWT.JwtDecoder.Validate</references>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_decoder_1a4cfae033fd0e63870039a95ce0da08dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>object</type>
        <definition>object JWT.JwtDecoder.DecodeToObject</definition>
        <argsstring>(Type type, JwtParts jwt, bool verify)</argsstring>
        <name>DecodeToObject</name>
        <qualifiedname>JWT.JwtDecoder.DecodeToObject</qualifiedname>
        <reimplements refid="interface_j_w_t_1_1_i_jwt_decoder_1a7bc410788b6465433d9bed7a7b91c67c">DecodeToObject</reimplements>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="class_j_w_t_1_1_jwt_parts" kindref="compound">JwtParts</ref></type>
          <declname>jwt</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verify</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><para>Given a <ref refid="namespace_j_w_t" kindref="compound">JWT</ref>, decodes it and return the payload as an object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type to deserialize to.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jwt</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespace_j_w_t" kindref="compound">JWT</ref></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verify</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to verify the signature (default is true)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An object representing the payload</para>
</simplesect>
</para>
 <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentOutOfRangeException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>FormatException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>SignatureVerificationException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TokenNotYetValidException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TokenExpiredException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="155" column="23" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" bodystart="155" bodyend="159"/>
        <references refid="class_j_w_t_1_1_jwt_decoder_1aa14378f1bcd2782f35a6d4e4d77ee5c7">JWT.JwtDecoder.Decode</references>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_decoder_1ad74fea61e5832bb49489843a24564d1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>object</type>
        <definition>object JWT.JwtDecoder.DecodeToObject</definition>
        <argsstring>(Type type, JwtParts jwt, byte[] key, bool verify)</argsstring>
        <name>DecodeToObject</name>
        <qualifiedname>JWT.JwtDecoder.DecodeToObject</qualifiedname>
        <reimplements refid="interface_j_w_t_1_1_i_jwt_decoder_1a31f9fc174279237300d5a1573f30b368">DecodeToObject</reimplements>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="class_j_w_t_1_1_jwt_parts" kindref="compound">JwtParts</ref></type>
          <declname>jwt</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>key</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>verify</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><para>Given a <ref refid="namespace_j_w_t" kindref="compound">JWT</ref>, decodes it and return the payload as an object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type to deserialize to.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jwt</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespace_j_w_t" kindref="compound">JWT</ref></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key that was used to sign the <ref refid="namespace_j_w_t" kindref="compound">JWT</ref></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verify</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to verify the signature (default is true)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An object representing the payload</para>
</simplesect>
</para>
 <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentOutOfRangeException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>FormatException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>SignatureVerificationException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TokenNotYetValidException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TokenExpiredException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="169" column="23" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" bodystart="169" bodyend="173"/>
        <references refid="class_j_w_t_1_1_jwt_decoder_1aa14378f1bcd2782f35a6d4e4d77ee5c7">JWT.JwtDecoder.Decode</references>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_decoder_1a4aedfc167e223098ef880b2f059737c4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>object</type>
        <definition>object JWT.JwtDecoder.DecodeToObject</definition>
        <argsstring>(Type type, JwtParts jwt, byte[][] keys, bool verify)</argsstring>
        <name>DecodeToObject</name>
        <qualifiedname>JWT.JwtDecoder.DecodeToObject</qualifiedname>
        <reimplements refid="interface_j_w_t_1_1_i_jwt_decoder_1a66f3f63a645cba226c8a44b9039c1e3f">DecodeToObject</reimplements>
        <param>
          <type>Type</type>
          <declname>type</declname>
        </param>
        <param>
          <type><ref refid="class_j_w_t_1_1_jwt_parts" kindref="compound">JwtParts</ref></type>
          <declname>jwt</declname>
        </param>
        <param>
          <type>byte</type>
          <declname>keys</declname>
          <array>[][]</array>
        </param>
        <param>
          <type>bool</type>
          <declname>verify</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><para>Given a <ref refid="namespace_j_w_t" kindref="compound">JWT</ref>, decodes it and return the payload as an object.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>The type to deserialize to.</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jwt</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespace_j_w_t" kindref="compound">JWT</ref></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>The keys which one of them was used to sign the <ref refid="namespace_j_w_t" kindref="compound">JWT</ref></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>verify</parametername>
</parameternamelist>
<parameterdescription>
<para>Whether to verify the signature (default is true)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An object representing the payload</para>
</simplesect>
</para>
 <parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentOutOfRangeException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>FormatException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>SignatureVerificationException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TokenNotYetValidException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TokenExpiredException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="183" column="23" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" bodystart="183" bodyend="187"/>
        <references refid="class_j_w_t_1_1_jwt_decoder_1aa14378f1bcd2782f35a6d4e4d77ee5c7">JWT.JwtDecoder.Decode</references>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_decoder_1a9b8bcc4b3a140f8087fc36edb2c154fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void JWT.JwtDecoder.Validate</definition>
        <argsstring>(string[] parts, byte[] key)</argsstring>
        <name>Validate</name>
        <qualifiedname>JWT.JwtDecoder.Validate</qualifiedname>
        <param>
          <type>string[]</type>
          <declname>parts</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Prepares data before calling IJwtValidator </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parts</parametername>
</parameternamelist>
<parameterdescription>
<para>The array representation of a <ref refid="namespace_j_w_t" kindref="compound">JWT</ref></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key that was used to sign the <ref refid="namespace_j_w_t" kindref="compound">JWT</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentOutOfRangeException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>FormatException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>SignatureVerificationException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TokenNotYetValidException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TokenExpiredException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="200" column="21"/>
        <referencedby refid="class_j_w_t_1_1_jwt_decoder_1a8cb3413ad89a3c4ce4cd00b354aad0d5" compoundref="_jwt_decoder_8cs" startline="126" endline="145">JWT.JwtDecoder.Decode</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_decoder_1ad61e32866e23d87fee2fdd72dd9f798a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void JWT.JwtDecoder.Validate</definition>
        <argsstring>(string[] parts, params byte[][] keys)</argsstring>
        <name>Validate</name>
        <qualifiedname>JWT.JwtDecoder.Validate</qualifiedname>
        <param>
          <type>string[]</type>
          <declname>parts</declname>
        </param>
        <param>
          <type>params byte</type>
          <declname>keys</declname>
          <array>[][]</array>
        </param>
        <briefdescription>
<para>Prepares data before calling IJwtValidator </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>parts</parametername>
</parameternamelist>
<parameterdescription>
<para>The array representation of a <ref refid="namespace_j_w_t" kindref="compound">JWT</ref></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>The keys provided which one of them was used to sign the <ref refid="namespace_j_w_t" kindref="compound">JWT</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentOutOfRangeException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>FormatException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>SignatureVerificationException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TokenNotYetValidException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TokenExpiredException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="214" column="21"/>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_decoder_1a7177bf70a440206276831c0956cea042" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void JWT.JwtDecoder.Validate</definition>
        <argsstring>(JwtParts jwt, params byte[][] keys)</argsstring>
        <name>Validate</name>
        <qualifiedname>JWT.JwtDecoder.Validate</qualifiedname>
        <param>
          <type><ref refid="class_j_w_t_1_1_jwt_parts" kindref="compound">JwtParts</ref></type>
          <declname>jwt</declname>
        </param>
        <param>
          <type>params byte</type>
          <declname>keys</declname>
          <array>[][]</array>
        </param>
        <briefdescription>
<para>Prepares data before calling IJwtValidator </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>jwt</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="namespace_j_w_t" kindref="compound">JWT</ref> parts</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para>The keys provided which one of them was used to sign the <ref refid="namespace_j_w_t" kindref="compound">JWT</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentNullException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>ArgumentOutOfRangeException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>FormatException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>SignatureVerificationException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TokenNotYetValidException</parametername>
</parameternamelist>
<parameterdescription>
<para><parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>TokenExpiredException</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="229" column="21" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" bodystart="229" bodyend="256"/>
        <references refid="class_j_w_t_1_1_jwt_decoder_context_1ac42b128e3f1a39a6ab6da27738ad7c65">JWT.JwtDecoderContext.Create</references>
        <references refid="class_j_w_t_1_1_jwt_parts_1ad166528ca24913ae525bfbfaa398fc53" compoundref="_jwt_parts_8cs" startline="54">JWT.JwtParts.Header</references>
        <references refid="class_j_w_t_1_1_jwt_parts_1a0400db619b083247f0a6aae0fd0b155b" compoundref="_jwt_parts_8cs" startline="60">JWT.JwtParts.Payload</references>
        <references refid="class_j_w_t_1_1_jwt_parts_1aa4b3664b7a04822f0ade253514249b42" compoundref="_jwt_parts_8cs" startline="66">JWT.JwtParts.Signature</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_decoder_1ae0e8b87506ac5c27819e4b5c9477d99e" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>string</type>
        <definition>string JWT.JwtDecoder.Decode</definition>
        <argsstring>(JwtParts jwt)</argsstring>
        <name>Decode</name>
        <qualifiedname>JWT.JwtDecoder.Decode</qualifiedname>
        <param>
          <type><ref refid="class_j_w_t_1_1_jwt_parts" kindref="compound">JwtParts</ref></type>
          <declname>jwt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="258" column="24" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" bodystart="258" bodyend="265"/>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_decoder_1a28b96148b904ba1e05bb475d000569f5" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void JWT.JwtDecoder.ValidSymmetricAlgorithm</definition>
        <argsstring>(byte[][] keys, string decodedPayload, IJwtAlgorithm algorithm, byte[] bytesToSign, byte[] decodedSignature)</argsstring>
        <name>ValidSymmetricAlgorithm</name>
        <qualifiedname>JWT.JwtDecoder.ValidSymmetricAlgorithm</qualifiedname>
        <param>
          <type>byte</type>
          <declname>keys</declname>
          <array>[][]</array>
        </param>
        <param>
          <type>string</type>
          <declname>decodedPayload</declname>
        </param>
        <param>
          <type><ref refid="interface_j_w_t_1_1_algorithms_1_1_i_jwt_algorithm" kindref="compound">IJwtAlgorithm</ref></type>
          <declname>algorithm</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>bytesToSign</declname>
        </param>
        <param>
          <type>byte[]</type>
          <declname>decodedSignature</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="267" column="22" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" bodystart="267" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_decoder_1ab00580ab330055cc45e1309b388f86de" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void JWT.JwtDecoder.ValidateNoneAlgorithm</definition>
        <argsstring>(JwtParts jwt)</argsstring>
        <name>ValidateNoneAlgorithm</name>
        <qualifiedname>JWT.JwtDecoder.ValidateNoneAlgorithm</qualifiedname>
        <param>
          <type><ref refid="class_j_w_t_1_1_jwt_parts" kindref="compound">JwtParts</ref></type>
          <declname>jwt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="294" column="22" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" bodystart="294" bodyend="309"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_j_w_t_1_1_jwt_decoder_1a39aa68bc8244ff6c515cb6d9cf2c5004" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>static bool JWT.JwtDecoder.AllKeysHaveValues</definition>
        <argsstring>(byte[][] keys)</argsstring>
        <name>AllKeysHaveValues</name>
        <qualifiedname>JWT.JwtDecoder.AllKeysHaveValues</qualifiedname>
        <param>
          <type>byte</type>
          <declname>keys</declname>
          <array>[][]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="283" column="29" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" bodystart="283" bodyend="292"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Decodes <ref refid="namespace_j_w_t" kindref="compound">JWT</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>IJwtDecoder</label>
        <link refid="interface_j_w_t_1_1_i_jwt_decoder"/>
      </node>
      <node id="1">
        <label>JWT.JwtDecoder</label>
        <link refid="class_j_w_t_1_1_jwt_decoder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>IJwtDecoder</label>
        <link refid="interface_j_w_t_1_1_i_jwt_decoder"/>
      </node>
      <node id="1">
        <label>JWT.JwtDecoder</label>
        <link refid="class_j_w_t_1_1_jwt_decoder"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" line="16" column="18" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm/JWT/JwtDecoder.cs" bodystart="17" bodyend="310"/>
    <listofallmembers>
      <member refid="class_j_w_t_1_1_jwt_decoder_1a2151ece20a55696d3b34d6713368a718" prot="private" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>_algFactory</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1a9739e4ccd93109941d74cd8764fdc2c4" prot="private" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>_jsonSerializer</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1ad1b4a55ca88867452ddff83faa0d9d81" prot="private" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>_jwtValidator</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1ab0eabf7a23fab03948a6bde0c54ba0a6" prot="private" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>_urlEncoder</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1a39aa68bc8244ff6c515cb6d9cf2c5004" prot="private" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>AllKeysHaveValues</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1aa14378f1bcd2782f35a6d4e4d77ee5c7" prot="public" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>Decode</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1a66055439f5767767fffe090669e4f97f" prot="public" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>Decode</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1a8cb3413ad89a3c4ce4cd00b354aad0d5" prot="public" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>Decode</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1ae0e8b87506ac5c27819e4b5c9477d99e" prot="private" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>Decode</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1ad35c18371276f882263a129147d56033" prot="public" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>DecodeHeader</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1ae455c9bb547b6cd16fa7f46c80919934" prot="public" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>DecodeHeader&lt; T &gt;</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1a4cfae033fd0e63870039a95ce0da08dc" prot="public" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>DecodeToObject</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1ad74fea61e5832bb49489843a24564d1c" prot="public" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>DecodeToObject</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1a4aedfc167e223098ef880b2f059737c4" prot="public" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>DecodeToObject</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1a1669a519db4a6b5b767a3980d859a0e8" prot="public" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>JwtDecoder</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1aaea7a84a35ac5e57e73497c086b4a259" prot="public" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>JwtDecoder</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1ac0c2fb4e1a500bcedc6657003304b605" prot="public" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>JwtDecoder</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1a9b8bcc4b3a140f8087fc36edb2c154fe" prot="public" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>Validate</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1ad61e32866e23d87fee2fdd72dd9f798a" prot="public" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>Validate</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1a7177bf70a440206276831c0956cea042" prot="public" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>Validate</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1ab00580ab330055cc45e1309b388f86de" prot="private" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>ValidateNoneAlgorithm</name></member>
      <member refid="class_j_w_t_1_1_jwt_decoder_1a28b96148b904ba1e05bb475d000569f5" prot="private" virt="non-virtual"><scope>JWT::JwtDecoder</scope><name>ValidSymmetricAlgorithm</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
