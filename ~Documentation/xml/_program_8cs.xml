<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.7" xml:lang="en-US">
  <compounddef id="_program_8cs" kind="file" language="C#">
    <compoundname>Program.cs</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_program_8cs_1a7f3759064279dcd09aa82e9b91280c9b" prot="public" static="no" mutable="no">
        <type>AppDomain.CurrentDomain.</type>
        <definition>AppDomain.CurrentDomain. ProcessExit</definition>
        <argsstring></argsstring>
        <name>ProcessExit</name>
        <initializer>= (sender, eventArgs) =&gt;
{
    Logger.SaveLog(&quot;latest-log&quot;);
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm.Tests/Program.cs" line="12" column="23" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm.Tests/Program.cs" bodystart="12" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_program_8cs_1a22fa3917f3c6859b28796429da2ee3df" prot="public" static="no" mutable="no">
        <type>AppDomain.CurrentDomain.</type>
        <definition>AppDomain.CurrentDomain. UnhandledException</definition>
        <argsstring></argsstring>
        <name>UnhandledException</name>
        <initializer>= (sender, eventArgs) =&gt;
{
    Logger.SaveLog(&quot;error-log&quot;);
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm.Tests/Program.cs" line="16" column="23" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm.Tests/Program.cs" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_program_8cs_1adaf951a74e7e2c8804480d14f4142eaf" prot="public" static="no" mutable="no">
        <type><ref refid="class_openlabs_1_1_mgcxm_1_1_tests_1_1_test_server" kindref="compound">TestServer</ref></type>
        <definition>TestServer server</definition>
        <argsstring></argsstring>
        <name>server</name>
        <initializer>= new <ref refid="class_openlabs_1_1_mgcxm_1_1_tests_1_1_test_server" kindref="compound">TestServer</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm.Tests/Program.cs" line="37" column="12" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm.Tests/Program.cs" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="_program_8cs_1aa22070b4090c14a73ce9d0c5fc0c3a29" prot="public" static="no" mutable="no">
        <type><ref refid="class_openlabs_1_1_mgcxm_1_1_tests_1_1_test_ws_server" kindref="compound">TestWsServer</ref></type>
        <definition>TestWsServer wsServer</definition>
        <argsstring></argsstring>
        <name>wsServer</name>
        <initializer>= new <ref refid="class_openlabs_1_1_mgcxm_1_1_tests_1_1_test_ws_server" kindref="compound">TestWsServer</ref>()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm.Tests/Program.cs" line="38" column="14" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm.Tests/Program.cs" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_program_8cs_1ace3c6970f2d3660fa98d69ddb8bdd18b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>await Bootstrap.</type>
        <definition>await Bootstrap. LoadMgcxm</definition>
        <argsstring>(new BootstrapOptions() { useExperimentalOptions=true, minimumLogLevel=LogLevel.TRACE, scalingOptions=new ScalingOptions() { maxThreads=10, maxNodes=30, useRandomPrefixes=true, runProcessesInBackground=true } })</argsstring>
        <name>LoadMgcxm</name>
        <param>
          <type>new <ref refid="class_openlabs_1_1_mgcxm_1_1_startup_1_1_bootstrap_options" kindref="compound">BootstrapOptions</ref>() { useExperimentalOptions=true, minimumLogLevel=LogLevel.TRACE, scalingOptions=new <ref refid="class_openlabs_1_1_mgcxm_1_1_startup_1_1_scaling_options" kindref="compound">ScalingOptions</ref>() { maxThreads=10, maxNodes=30, useRandomPrefixes=true, runProcessesInBackground=true } }</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm.Tests/Program.cs" line="21" column="16" declfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm.Tests/Program.cs" declline="21" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="_program_8cs_1aa3b03ca6203f6f6a8ee395b5dbc2676d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>server.</type>
        <definition>wsServer Start</definition>
        <argsstring>()</argsstring>
        <name>Start</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm.Tests/Program.cs" line="40" column="7" declfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm.Tests/Program.cs" declline="40" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="_program_8cs_1aa42b148603fa31e853bd5122bce692ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>while</definition>
        <argsstring>(true)</argsstring>
        <name>while</name>
        <param>
          <type>true</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm.Tests/Program.cs" line="43" column="1" bodyfile="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm.Tests/Program.cs" bodystart="43" bodyend="45"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>See<sp/>https://aka.ms/new-console-template<sp/>for<sp/>more<sp/>information</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_openlabs_1_1_mgcxm_1_1_assets" kindref="compound">Openlabs.Mgcxm.Assets</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_openlabs_1_1_mgcxm_1_1_internal" kindref="compound">Openlabs.Mgcxm.Internal</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_openlabs_1_1_mgcxm_1_1_startup" kindref="compound">Openlabs.Mgcxm.Startup</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_openlabs_1_1_mgcxm_1_1_net_1_1_polling" kindref="compound">Openlabs.Mgcxm.Net.Polling</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_openlabs_1_1_mgcxm_1_1_tests" kindref="compound">Openlabs.Mgcxm.Tests</ref>;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using<sp/></highlight><highlight class="normal"><ref refid="namespace_openlabs_1_1_mgcxm_1_1_tests_1_1_assets_1_1_responses" kindref="compound">Openlabs.Mgcxm.Tests.Assets.Responses</ref>;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="_program_8cs_1a7f3759064279dcd09aa82e9b91280c9b" refkind="member"><highlight class="normal">AppDomain.CurrentDomain.ProcessExit<sp/>+=<sp/>(sender,<sp/>eventArgs)<sp/>=&gt;</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>Logger.SaveLog(</highlight><highlight class="stringliteral">&quot;latest-log&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="15"><highlight class="normal">};</highlight></codeline>
<codeline lineno="16" refid="_program_8cs_1a22fa3917f3c6859b28796429da2ee3df" refkind="member"><highlight class="normal">AppDomain.CurrentDomain.UnhandledException<sp/>+=<sp/>(sender,<sp/>eventArgs)<sp/>=&gt;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>Logger.SaveLog(</highlight><highlight class="stringliteral">&quot;error-log&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">};</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="_program_8cs_1ace3c6970f2d3660fa98d69ddb8bdd18b" refkind="member"><highlight class="normal">await<sp/>Bootstrap.LoadMgcxm(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_openlabs_1_1_mgcxm_1_1_startup_1_1_bootstrap_options" kindref="compound">BootstrapOptions</ref>()</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>useExperimentalOptions<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>minimumLogLevel<sp/>=<sp/><ref refid="namespace_openlabs_1_1_mgcxm_1_1_internal_1a25582aed8bd08a2f6803962cbe3d27fe" kindref="member">LogLevel</ref>.TRACE,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>scalingOptions<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_openlabs_1_1_mgcxm_1_1_startup_1_1_scaling_options" kindref="compound">ScalingOptions</ref>()</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxThreads<sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxNodes<sp/>=<sp/>30,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>useRandomPrefixes<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>runProcessesInBackground<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal">});</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>LoggerSink<sp/>logSink<sp/>=<sp/>new<sp/>LoggerSink(&quot;Program&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>logSink.Info(&quot;Initializing<sp/>TestServer<sp/>(HTTP,<sp/>WS)&quot;);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="_program_8cs_1adaf951a74e7e2c8804480d14f4142eaf" refkind="member"><highlight class="normal"><ref refid="class_openlabs_1_1_mgcxm_1_1_tests_1_1_test_server" kindref="compound">TestServer</ref><sp/><ref refid="_program_8cs_1adaf951a74e7e2c8804480d14f4142eaf" kindref="member">server</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_openlabs_1_1_mgcxm_1_1_tests_1_1_test_server" kindref="compound">TestServer</ref>();</highlight></codeline>
<codeline lineno="38" refid="_program_8cs_1aa22070b4090c14a73ce9d0c5fc0c3a29" refkind="member"><highlight class="normal"><ref refid="class_openlabs_1_1_mgcxm_1_1_tests_1_1_test_ws_server" kindref="compound">TestWsServer</ref><sp/><ref refid="_program_8cs_1aa22070b4090c14a73ce9d0c5fc0c3a29" kindref="member">wsServer</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_openlabs_1_1_mgcxm_1_1_tests_1_1_test_ws_server" kindref="compound">TestWsServer</ref>();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="_program_8cs_1aa3b03ca6203f6f6a8ee395b5dbc2676d" refkind="member"><highlight class="normal"><ref refid="_program_8cs_1adaf951a74e7e2c8804480d14f4142eaf" kindref="member">server</ref>.<ref refid="class_openlabs_1_1_mgcxm_1_1_net_1_1_mgcxm_http_listener_1a12292b58f349e2c26d118701feddc862" kindref="member">Start</ref>();</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="_program_8cs_1aa22070b4090c14a73ce9d0c5fc0c3a29" kindref="member">wsServer</ref>.<ref refid="class_openlabs_1_1_mgcxm_1_1_net_1_1_mgcxm_socket_listener_1a5c5de235a73088cce6c137d25664c3c2" kindref="member">Start</ref>();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="_program_8cs_1aa42b148603fa31e853bd5122bce692ca" refkind="member"><highlight class="normal"></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/adenf/RiderProjects/Openlabs.Mgcxm/Openlabs.Mgcxm.Tests/Program.cs"/>
  </compounddef>
</doxygen>
